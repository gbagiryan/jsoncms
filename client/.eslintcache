[{"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\index.js":"1","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\App.js":"2","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\reportWebVitals.js":"3","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\ReduxStore.js":"4","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AuthSelectors.js":"5","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AppSelectors.js":"6","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\ObjReducer.js":"7","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AppReducer.js":"8","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AuthReducer.js":"9","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\LoginContainer.js":"10","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\MainContainer.js":"11","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\RegisterContainer.js":"12","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\HeaderContainer.js":"13","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBarContainer.js":"14","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddNewObjContainer.js":"15","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObj\\EditObjContainer.js":"16","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\Register.js":"17","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\Login.js":"18","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\Main.js":"19","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\ObjSelectors.js":"20","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBar.js":"21","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\Header.js":"22","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\API\\api.js":"23","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\WithAuthRedirect.js":"24","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\RecursiveForm\\FormContainer.js":"25","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Validators.js":"26","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ConfirmDialog.js":"27","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Messages.js":"28","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\RecursiveForm\\RecursiveForm.js":"29","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\RecursiveMain.js":"30","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ProgressWithPercentage.js":"31","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\RichTextDialog\\RichTextDialog.js":"32"},{"size":450,"mtime":1615270610820,"results":"33","hashOfConfig":"34"},{"size":2773,"mtime":1615270610793,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1615270610820,"results":"36","hashOfConfig":"34"},{"size":575,"mtime":1615270610816,"results":"37","hashOfConfig":"34"},{"size":71,"mtime":1615270610817,"results":"38","hashOfConfig":"34"},{"size":234,"mtime":1615270610817,"results":"39","hashOfConfig":"34"},{"size":3426,"mtime":1615448625796,"results":"40","hashOfConfig":"34"},{"size":1395,"mtime":1615270610813,"results":"41","hashOfConfig":"34"},{"size":2214,"mtime":1615448474404,"results":"42","hashOfConfig":"34"},{"size":1511,"mtime":1615270610804,"results":"43","hashOfConfig":"34"},{"size":2214,"mtime":1615270610806,"results":"44","hashOfConfig":"34"},{"size":1999,"mtime":1615270610809,"results":"45","hashOfConfig":"34"},{"size":790,"mtime":1615270610802,"results":"46","hashOfConfig":"34"},{"size":1439,"mtime":1615270610811,"results":"47","hashOfConfig":"34"},{"size":2277,"mtime":1615270610800,"results":"48","hashOfConfig":"34"},{"size":3237,"mtime":1615270610801,"results":"49","hashOfConfig":"34"},{"size":2753,"mtime":1615443420534,"results":"50","hashOfConfig":"34"},{"size":2109,"mtime":1615443412223,"results":"51","hashOfConfig":"34"},{"size":3626,"mtime":1615270610805,"results":"52","hashOfConfig":"34"},{"size":149,"mtime":1615270610818,"results":"53","hashOfConfig":"34"},{"size":1718,"mtime":1615270610811,"results":"54","hashOfConfig":"34"},{"size":1034,"mtime":1615270610802,"results":"55","hashOfConfig":"34"},{"size":1233,"mtime":1615270610792,"results":"56","hashOfConfig":"34"},{"size":539,"mtime":1615270610797,"results":"57","hashOfConfig":"34"},{"size":7690,"mtime":1615280818563,"results":"58","hashOfConfig":"34"},{"size":638,"mtime":1615270610797,"results":"59","hashOfConfig":"34"},{"size":1383,"mtime":1615270610794,"results":"60","hashOfConfig":"34"},{"size":750,"mtime":1615270610795,"results":"61","hashOfConfig":"34"},{"size":7604,"mtime":1615280794881,"results":"62","hashOfConfig":"34"},{"size":4320,"mtime":1615388044743,"results":"63","hashOfConfig":"34"},{"size":1243,"mtime":1615270610795,"results":"64","hashOfConfig":"34"},{"size":3051,"mtime":1615388044743,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"ri3n3x",{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\index.js",[],["142","143"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\App.js",["144","145"],"import './App.css';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport MainContainer from './Components/Main/MainContainer';\r\nimport { Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport LoginContainer from './Components/Login/LoginContainer';\r\nimport RegisterContainer from './Components/Register/RegisterContainer';\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isAuthed } from './Redux/Selectors/AuthSelectors';\r\nimport { fetchObjs } from './Redux/Reducers/ObjReducer';\r\nimport SideBarContainer from './Components/SideBar/SideBarContainer';\r\nimport AddNewObjContainer from './Components/AddNewObj/AddNewObjContainer';\r\nimport EditObjContainer from './Components/EditObj/EditObjContainer';\r\nimport { initializeApp } from './Redux/Reducers/AppReducer';\r\nimport { isInitialized } from './Redux/Selectors/AppSelectors';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    minHeight: '100vh',\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst App = (props) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    props.initializeApp();\r\n  }, []);\r\n  useEffect(() => {\r\n    props.fetchObjs(props.isAuthed);\r\n  }, [props.isAuthed]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n\r\n      {props.isInitialized &&\r\n      <Grid container direction={'column'} spacing={1}>\r\n        <Grid item>\r\n          <HeaderContainer/>\r\n        </Grid>\r\n        <Grid item container spacing={2} xs={12}>\r\n          {props.isAuthed\r\n            ?\r\n            <Grid item xs={2}>\r\n              <SideBarContainer/>\r\n            </Grid>\r\n            : null}\r\n          <Grid item xs={props.isAuthed ? 10 : 12}>\r\n            <Paper elevation={4} className={classes.paper}>\r\n              <Switch>\r\n                <Route exact path='/' component={MainContainer}/>\r\n                <Route exact path='/add_obj' component={AddNewObjContainer}/>\r\n                <Route exact path='/login' component={LoginContainer}/>\r\n                <Route exact path='/register' component={RegisterContainer}/>\r\n                <Route exact path='/edit_obj'>\r\n                  <Redirect to=\"/\"/>\r\n                </Route>\r\n                <Route path='/edit_obj/:objId' component={EditObjContainer}/>\r\n              </Switch>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      }\r\n    </BrowserRouter>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  isInitialized: isInitialized(state)\r\n});\r\nconst actionCreators = {\r\n  initializeApp,\r\n  fetchObjs\r\n};\r\nexport default connect(mapStateToProps, actionCreators)(App);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\reportWebVitals.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\ReduxStore.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AuthSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AppSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\ObjReducer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AppReducer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AuthReducer.js",["146"],"import { AuthApi } from '../../API/api';\r\nimport { setErrorMsg, setSuccessMsg } from './AppReducer';\r\n\r\nconst AUTH_SET_USER_DATA = 'AUTH_SET_USER_DATA';\r\nconst AUTH_SET_IS_AUTHED = 'AUTH_SET_IS_AUTHED';\r\n\r\nconst initialState = {\r\n  authedUserData: null,\r\n  isAuthed: false\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        authedUserData: action.userData\r\n      };\r\n    case AUTH_SET_IS_AUTHED:\r\n      return {\r\n        ...state,\r\n        isAuthed: action.isAuthed\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//action creators\r\nconst setUserData = (userData) => ({ type: AUTH_SET_USER_DATA, userData });\r\nconst setIsAuthed = (isAuthed) => ({ type: AUTH_SET_IS_AUTHED, isAuthed });\r\n\r\n//thunks\r\nexport const signIn = (username, password) => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.signIn(username, password);\r\n    dispatch(setUserData(res.data));\r\n    dispatch(setIsAuthed(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (!err.response) {\r\n      dispatch(setErrorMsg('Something went wrong...try again'));\r\n    } else {\r\n      dispatch(setErrorMsg(err.response.data.errorMessage));\r\n    }\r\n  }\r\n};\r\nexport const signOut = () => async (dispatch) => {\r\n  try {\r\n    await AuthApi.signOut();\r\n    dispatch(setUserData(null));\r\n    dispatch(setIsAuthed(false));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const signUp = (username, password) => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.signUp(username, password);\r\n    dispatch(setUserData(res.data));\r\n    dispatch(setIsAuthed(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (!err.response) {\r\n      dispatch(setErrorMsg('Something went wrong...try again'));\r\n    } else {\r\n      dispatch(setErrorMsg(err.response.data.errorMessage));\r\n    }\r\n  }\r\n};\r\nexport const verifyAuth = () => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.verifyAuth();\r\n    if (res.data) {\r\n      dispatch(setIsAuthed(true));\r\n    } else {\r\n      dispatch(setIsAuthed(false));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport default AuthReducer;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\LoginContainer.js",["147","148"],"import Login from './Login';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../Redux/Reducers/AuthReducer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthed } from '../../Redux/Selectors/AuthSelectors';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport Register from '../Register/Register';\r\n\r\nconst LoginContainer = (props) => {\r\n\r\n  const [inputs, setInputs] = useState({ username: '', password: '' });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleInput = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    props.clearMessages();\r\n      props.signIn(inputs.username, inputs.password);\r\n  };\r\n\r\n  if (props.isAuthed) {\r\n    return <Redirect to={'/'}/>;\r\n  }\r\n  return (\r\n    <Login errorMsg={props.errorMsg}\r\n           successMsg={props.successMsg}\r\n           handleInput={handleInput}\r\n           handleSubmit={handleSubmit}\r\n           inputs={inputs}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  signIn,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(LoginContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\MainContainer.js",["149"],"import { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getSingleObjData } from '../../Redux/Selectors/ObjSelectors';\r\nimport { deleteObj} from '../../Redux/Reducers/ObjReducer';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport Main from './Main';\r\n\r\nconst MainContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    if (props.obj) {\r\n      setInitialObjs({ ...props.obj.objs });\r\n      setName(props.obj.name);\r\n      setTagsArr(props.obj.tags);\r\n      setObjId(props.obj._id);\r\n    }\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, [props.obj]);\r\n\r\n  const [name, setName] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n  const [objId, setObjId] = useState([]);\r\n\r\n  const [initialObjs, setInitialObjs] = useState();\r\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' });\r\n\r\n  const handleDeleteObj = (objId) => {\r\n    props.deleteObj(objId);\r\n    setConfirmDialog({ ...confirmDialog, isOpen: false });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.obj ?\r\n        <Main\r\n          errorMsg={props.errorMsg}\r\n          successMsg={props.successMsg}\r\n          setErrorMsg={props.setErrorMsg}\r\n          clearMessages={props.clearMessages}\r\n          initialObjs={initialObjs}\r\n          objId={objId}\r\n          handleDeleteObj={handleDeleteObj}\r\n          tagsArr={tagsArr}\r\n          name={name}\r\n          confirmDialog={confirmDialog}\r\n          setConfirmDialog={setConfirmDialog}\r\n        />\r\n        : <div>\r\n          <h2>\r\n            Choose an object to display\r\n          </h2>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state),\r\n  obj: getSingleObjData(state)\r\n});\r\nconst actionCreators = {\r\n  deleteObj,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(MainContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\RegisterContainer.js",["150"],"import Register from './Register';\r\nimport { signUp } from '../../Redux/Reducers/AuthReducer';\r\nimport { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthed } from '../../Redux/Selectors/AuthSelectors';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\n\r\nconst RegisterContainer = (props) => {\r\n  const [inputs, setInputs] = useState({ username: '', password: '', password2: '' });\r\n  const [invalidFields, setInvalidFields] = useState({ username: '', password: '', password2: '' });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleInput = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n    setInvalidFields({ ...invalidFields, ...{ [e.target.name]: '' } });\r\n  };\r\n\r\n  const validate = (e, label, validations) => {\r\n    setInvalidFields({\r\n      ...invalidFields, ...{\r\n        [e.target.name]: validations.map((errsFor) =>\r\n          errsFor(label, inputs[e.target.name]))\r\n          .filter(errMsg => errMsg.length > 0)\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    props.clearMessages();\r\n    props.signUp(inputs.username, inputs.password);\r\n  };\r\n\r\n  if (props.isAuthed) {\r\n    return <Redirect to={'/'}/>;\r\n  }\r\n  return (\r\n    <Register\r\n      errorMsg={props.errorMsg}\r\n      successMsg={props.successMsg}\r\n      handleSubmit={handleSubmit}\r\n      handleInput={handleInput}\r\n      validate={validate}\r\n      inputs={inputs}\r\n      invalidFields={invalidFields}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  signUp,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(RegisterContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\HeaderContainer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBarContainer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddNewObjContainer.js",["151"],"import { connect } from 'react-redux';\r\nimport { addNewObj } from '../../Redux/Reducers/ObjReducer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport FormContainer from '../RecursiveForm/FormContainer';\r\n\r\nconst AddNewObjContainer = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [tag, setTag] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleTagChange = (e) => {\r\n    props.clearMessages();\r\n    setTag(e.target.value);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    props.clearMessages();\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    if (tag) {\r\n      if (!tagsArr.includes(tag)) {\r\n        setTagsArr([...tagsArr, tag]);\r\n      } else {\r\n        props.setErrorMsg('Tags must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Tag can\\'t be empty');\r\n    }\r\n  };\r\n  const handleDeleteTag = (index) => {\r\n    setTagsArr(tagsArr.filter((tag) => tagsArr.indexOf(tag) !== index));\r\n  };\r\n\r\n  const handleSubmit = (objs) => {\r\n    props.clearMessages();\r\n    const newObj = {\r\n      objs,\r\n      name: name,\r\n      tags: tagsArr\r\n    };\r\n    props.addNewObj(newObj);\r\n  };\r\n\r\n  return (\r\n    <FormContainer\r\n      errorMsg={props.errorMsg}\r\n      successMsg={props.successMsg}\r\n      setErrorMsg={props.setErrorMsg}\r\n      clearMessages={props.clearMessages}\r\n      tagsArr={tagsArr}\r\n      handleTagChange={handleTagChange}\r\n      handleAddTag={handleAddTag}\r\n      handleDeleteTag={handleDeleteTag}\r\n      name={name}\r\n      handleNameChange={handleNameChange}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  addNewObj,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(AddNewObjContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObj\\EditObjContainer.js",["152","153"],"import { getSingleObjData } from '../../Redux/Selectors/ObjSelectors';\r\nimport { deleteObj, updateObj } from '../../Redux/Reducers/ObjReducer';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport FormContainer from '../RecursiveForm/FormContainer';\r\n\r\nconst EditObjContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    if (props.obj) {\r\n      setInitialObjs({ ...props.obj.objs });\r\n      setName(props.obj.name);\r\n      setTagsArr(props.obj.tags);\r\n    }\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, [props.obj]);\r\n\r\n  const [name, setName] = useState('');\r\n  const [tag, setTag] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n\r\n  const [initialObjs, setInitialObjs] = useState();\r\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' });\r\n\r\n  const handleTagChange = (e) => {\r\n    props.clearMessages();\r\n    setTag(e.target.value);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    props.clearMessages();\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    if (tag) {\r\n      if (!tagsArr.includes(tag)) {\r\n        setTagsArr([...tagsArr, tag]);\r\n      } else {\r\n        props.setErrorMsg('Tags must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Tag can\\'t be empty');\r\n    }\r\n  };\r\n  const handleDeleteTag = (index) => {\r\n    setTagsArr(tagsArr.filter((tag) => tagsArr.indexOf(tag) !== index));\r\n  };\r\n\r\n  const handleDeleteObj = () => {\r\n    props.deleteObj(props.obj._id);\r\n    setConfirmDialog({ ...confirmDialog, isOpen: false });\r\n  };\r\n\r\n  const handleSubmit = (objs) => {\r\n    props.clearMessages();\r\n    const updatedObj = {\r\n      objs,\r\n      name: name,\r\n      tags: tagsArr\r\n    };\r\n    props.updateObj(props.obj._id, updatedObj);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.obj ?\r\n        <FormContainer\r\n          errorMsg={props.errorMsg}\r\n          successMsg={props.successMsg}\r\n          setErrorMsg={props.setErrorMsg}\r\n          clearMessages={props.clearMessages}\r\n          tagsArr={tagsArr}\r\n          handleTagChange={handleTagChange}\r\n          handleAddTag={handleAddTag}\r\n          handleDeleteTag={handleDeleteTag}\r\n          name={name}\r\n          handleNameChange={handleNameChange}\r\n          handleSubmit={handleSubmit}\r\n          initialObjs={initialObjs}\r\n          handleDeleteObj={handleDeleteObj}\r\n          handleDeleteTag={handleDeleteTag}\r\n        />\r\n        : <h2>\r\n          Choose an object to display\r\n        </h2>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  obj: getSingleObjData(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  updateObj,\r\n  deleteObj,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(EditObjContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\Register.js",["154"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\Login.js",["155","156"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\Main.js",["157","158"],"import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles, TextField\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { Link } from 'react-router-dom';\r\nimport RecursiveMain from './RecursiveMain';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Error, Success } from '../../Common/Messages';\r\nimport ConfirmDialog from '../../Common/ConfirmDialog';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    minHeight: 200,\r\n    width: 300,\r\n    padding: theme.spacing(2)\r\n  },\r\n  objPreview: {\r\n    margin: 'auto'\r\n  },\r\n  buttons: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  fields: {\r\n    border: '1px solid rgba(0, 0, 0, 0.3)',\r\n    display: 'block',\r\n    borderRadius: 5,\r\n    padding: 10.5,\r\n    marginTop: theme.spacing(3),\r\n    position: 'relative',\r\n    width: 'fit-content',\r\n    blockSize: 'fit-content',\r\n    minWidth: '25%'\r\n  },\r\n  label: {\r\n    fontSize: '0.9rem',\r\n    color: '#3f51b5',\r\n    position: 'absolute',\r\n    top: -20,\r\n  },\r\n}));\r\n\r\nconst Main = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {props.initialObjs ?\r\n        <Grid container spacing={2}>\r\n          {props.errorMsg &&\r\n          <Grid item xs={12}>\r\n            <Error errorMsg={props.errorMsg}/>\r\n          </Grid>\r\n          }\r\n          {props.successMsg &&\r\n          <Grid item xs={12}>\r\n            <Success successMsg={props.successMsg}/>\r\n          </Grid>\r\n          }\r\n\r\n          <Grid container>\r\n            <Grid item xs={8}>\r\n              <Typography className={classes.fields}>\r\n                <label className={classes.label}>Name</label>\r\n                {props.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Button className={classes.buttons}\r\n                      onClick={() => {\r\n                        props.setConfirmDialog({\r\n                          isOpen: true,\r\n                          title: `Deleting ${props.name}`,\r\n                          subTitle: `Are you sure you want to completely delete this object`,\r\n                          onConfirm: () => props.handleDeleteObj(props.objId)\r\n                        });\r\n                      }}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      endIcon={<DeleteForeverIcon/>}>Delete</Button>\r\n              <Button className={classes.buttons}\r\n                      component={Link} to={`/edit_obj/${props.objId}`}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      endIcon={<EditIcon/>}>Edit</Button>\r\n            </Grid>\r\n\r\n            <RecursiveMain initialObjs={props.initialObjs}/>\r\n\r\n            {props.tagsArr.length > 0 &&\r\n            <Grid item xs={7}>\r\n              <Typography className={classes.fields}>\r\n                <label className={classes.label}>Tags</label>\r\n                {props.tagsArr.map((tag) =>\r\n                  <>\r\n                    {tag},\r\n                  </>\r\n                )}\r\n              </Typography>\r\n            </Grid>\r\n            }\r\n            <ConfirmDialog confirmDialog={props.confirmDialog} setConfirmDialog={props.setConfirmDialog}/>\r\n          </Grid>\r\n        </Grid>\r\n        : <h2>\r\n          Choose an object to display\r\n        </h2>\r\n      }\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\ObjSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBar.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\API\\api.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\WithAuthRedirect.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\RecursiveForm\\FormContainer.js",["159","160","161"],"import React, { useEffect, useState } from 'react';\r\nimport RecursiveForm from './RecursiveForm';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Button, Grid, IconButton, TextField } from '@material-ui/core';\r\nimport { Error, Success } from '../../Common/Messages';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport ConfirmDialog from '../../Common/ConfirmDialog';\r\nimport Axios from 'axios';\r\nimport { requiredField } from '../../Common/Validators';\r\nimport { useImmer } from 'use-immer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3),\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nconst FormContainer = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n  const [objs, setObjs] = useImmer([{ __key: '', __value: '', __type: inputTypes[0].value }]);\r\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' });\r\n  // const [invalidObjs, setInvalidObjs] = useState({});\r\n  const [uploadProgress, setUploadProgress] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.initialObjs) {\r\n      handleAddInitialFields(props.initialObjs);\r\n    }\r\n  }, [props.initialObjs]);\r\n\r\n  const handleAddInitialFields = (initialObjs) => {\r\n    setObjs(draft => (Object.values(initialObjs)));\r\n  };\r\n\r\n  const changeItemByIndex = (strIndex, cb) => {\r\n    if (!strIndex) {\r\n      setObjs(draft => (cb(objs)));\r\n    } else {\r\n      const str = strIndex.split('.');\r\n      setObjs(draft => {\r\n        for (let i = 0; i < str.length; i++) {\r\n          if (i === str.length - 1) {\r\n            draft[str[i]] = cb(draft[str[i]]);\r\n          }\r\n          draft = draft[str[i]].__value;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChildInput = (event, strIndex) => {\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      // setInvalidObjs({ ...invalidObjs, [`${strIndex}${event.target.name}`]: '' });\r\n      obj[event.target.name] = event.target.value;\r\n      return obj;\r\n    });\r\n  };\r\n\r\n  // const validate = (event, strIndex) => {\r\n  //   setInvalidObjs({\r\n  //     ...invalidObjs,\r\n  //     [`${strIndex}${event.target.name}`]: requiredField(event.target.placeholder, event.target.value)\r\n  //   });\r\n  // };\r\n\r\n  const handleChangeChildType = (event, strIndex) => {\r\n    // setInvalidObjs({ ...invalidObjs, [`${strIndex}__value`]: '' });\r\n    // setInvalidObjs({ ...invalidObjs, [`${strIndex}__key`]: '' });\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      obj.__type = event.target.value;\r\n      obj.__value = '';\r\n      if (event.target.value === 'object' || event.target.value === 'array') {\r\n        obj.__value = [{ __key: '', __value: '', __type: inputTypes[0].value }];\r\n      }\r\n      return obj;\r\n    });\r\n  };\r\n\r\n  const handleAdd = (strIndex) => {\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      if (!strIndex) {\r\n        return [...obj, { __key: '', __value: '', __type: inputTypes[0].value }];\r\n      } else {\r\n        console.log(obj.__value);\r\n        obj.__value.push({ __key: '', __value: '', __type: inputTypes[0].value });\r\n        return obj;\r\n      }\r\n    });\r\n  };\r\n  const handleRemove = (strIndex, index) => {\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      if (!strIndex) {\r\n        const temp = [...obj];\r\n        temp.splice(index, 1);\r\n        return temp;\r\n      } else {\r\n        obj.__value.splice(index, 1);\r\n        console.log(obj);\r\n        return obj;\r\n      }\r\n    });\r\n    setConfirmDialog({ ...confirmDialog, isOpen: false });\r\n  };\r\n\r\n  const handleUpload = async (event, strIndex) => {\r\n    const formData = new FormData();\r\n    formData.append('uploadedFile', event.target.files[0]);\r\n    const uploadedFileName = await Axios.post(`${process.env.REACT_APP_SERVER_BASE_URL}/api/backoffice/uploadFile`, formData, {\r\n      onUploadProgress: progressEvent => {\r\n        const { loaded, total } = progressEvent;\r\n        changeItemByIndex(strIndex, (obj) => {\r\n          obj.uploadProgress = (Math.floor((loaded * 100) / total));\r\n          return obj;\r\n        });\r\n      }\r\n    });\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      obj[event.target.name] = event.target.value;\r\n      obj.__value = uploadedFileName.data;\r\n      return obj;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // const hasErrors = Object.values(invalidObjs).filter(val => val !== '');\r\n    // if (hasErrors.length > 0) {\r\n    //   props.setErrorMsg('No empty fields allowed. Fill the blanks or remove them');\r\n    // } else {\r\n      props.handleSubmit(objs);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        {props.errorMsg &&\r\n        <Grid item xs={12}>\r\n          <Error errorMsg={props.errorMsg}/>\r\n        </Grid>\r\n        }\r\n        {props.successMsg &&\r\n        <Grid item xs={12}>\r\n          <Success successMsg={props.successMsg}/>\r\n        </Grid>\r\n        }\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            placeholder={'Name'}\r\n            name={'Name'}\r\n            label={'Name'}\r\n            value={props.name}\r\n            onChange={props.handleNameChange}/>\r\n          <IconButton color=\"primary\"\r\n                      className={classes.fieldIcons}\r\n                      onClick={() => handleAdd(null)}>\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        <RecursiveForm objs={objs}\r\n                       handleChildInput={handleChildInput}\r\n                       handleChangeChildType={handleChangeChildType}\r\n                       handleAdd={handleAdd}\r\n                       handleRemove={handleRemove}\r\n                       inputTypes={inputTypes}\r\n                       setConfirmDialog={setConfirmDialog}\r\n                       handleUpload={handleUpload}\r\n                       uploadProgress={uploadProgress}\r\n                       // validate={validate}\r\n                       // invalidObjs={invalidObjs}\r\n        />\r\n        <Grid item xs={12}>\r\n          {props.tagsArr.map((tag) =>\r\n            <>\r\n              {tag}\r\n              <IconButton onClick={() => props.handleDeleteTag(props.tagsArr.indexOf(tag))}\r\n                          color=\"primary\">\r\n                <HighlightOffIcon/>\r\n              </IconButton>\r\n              {', '}\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField variant=\"outlined\"\r\n                     size=\"small\"\r\n                     placeholder={'Tag'}\r\n                     name={'tag'}\r\n                     label={'Tag'}\r\n                     value={props.tag}\r\n                     onChange={props.handleTagChange}/>\r\n          <IconButton className={classes.fieldIcons} onClick={props.handleAddTag} color=\"primary\">\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        <Button type={'submit'} variant=\"contained\" color=\"primary\"\r\n                className={classes.button} onClick={handleSubmit}>Save</Button>\r\n      </Grid>\r\n      <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog}/>\r\n    </Container>\r\n  );\r\n};\r\nexport default FormContainer;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Validators.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ConfirmDialog.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Messages.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\RecursiveForm\\RecursiveForm.js",["162"],"import React, { useState } from 'react';\r\nimport { IconButton, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport RichTextDialog from '../RichTextDialog/RichTextDialog';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  rtfEditor: {\r\n    width: 400,\r\n    '& .ql-container': {\r\n      overflow: 'hidden'\r\n      // minHeight: 100\r\n    },\r\n    '& .ql-toolbar.ql-snow': {\r\n      display: 'none'\r\n    },\r\n    '& .ql-editor': {\r\n      height: 100,\r\n      overflow: 'hidden'\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  innerObj: {\r\n    marginLeft: theme.spacing(10)\r\n  },\r\n  uploadButton: {\r\n    margin: theme.spacing(1),\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RecursiveForm = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {props.objs.map((obj, index) => (\r\n        <div>\r\n          {!props.isArray &&\r\n          <TextField\r\n            key={'Key'}\r\n            placeholder={'Key'}\r\n            name={'__key'}\r\n            value={obj.__key}\r\n            variant=\"outlined\"\r\n            // error={props.invalidObjs[props.index ? `${props.index}.${index}__key` : `${index}__key`]\r\n            // && props.invalidObjs[props.index ? `${props.index}.${index}__key` : `${index}__key`]}\r\n            // helperText={props.invalidObjs[props.index ? `${props.index}.${index}__key` : `${index}__key`]\r\n            // && props.invalidObjs[props.index ? `${props.index}.${index}__key` : `${index}__key`]}\r\n            // onBlur={(event) => props.validate(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n            size=\"small\"\r\n            label={'Key'}\r\n            onChange={(event) => props.handleChildInput(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n          />\r\n          }\r\n          {obj.__type === 'string' &&\r\n          <TextField\r\n            key={'Value'}\r\n            placeholder={'Value'}\r\n            name={'__value'}\r\n            value={obj.__value}\r\n            variant=\"outlined\"\r\n            // error={props.invalidObjs[props.index ? `${props.index}.${index}__value` : `${index}__value`]\r\n            // && props.invalidObjs[props.index ? `${props.index}.${index}__value` : `${index}__value`]}\r\n            // helperText={props.invalidObjs[props.index ? `${props.index}.${index}__value` : `${index}__value`]\r\n            // && props.invalidObjs[props.index ? `${props.index}.${index}__value` : `${index}__value`]}\r\n            // onBlur={(event) => props.validate(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n            size=\"small\"\r\n            label={'Value'}\r\n            onChange={(event) => props.handleChildInput(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n          />\r\n          }\r\n          {obj.__type === 'file' &&\r\n          <>\r\n            <input className={classes.uploadButton} type={'file'} name={'upload'}\r\n                   onChange={(event) => props.handleUpload(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n            />\r\n            {(obj.uploadProgress && obj.uploadProgress > 0)\r\n            && <ProgressWithPercentage value={obj.uploadProgress} index={index} file={obj.__value}/>\r\n            }\r\n          </>\r\n          }\r\n          <TextField\r\n            id=\"standard-select\"\r\n            select\r\n            name={'__type'}\r\n            value={obj.__type}\r\n            onChange={(event) => props.handleChangeChildType(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n          >{props.inputTypes.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n          </TextField>\r\n          {(obj.__type === 'object' || obj.__type === 'array') &&\r\n          <IconButton color=\"primary\"\r\n                      className={classes.fieldIcons}\r\n                      onClick={() => props.handleAdd(props.index ? `${props.index}.${index}` : `${index}`)}>\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n          }\r\n          {props.objs.length > 1 &&\r\n          <IconButton color=\"secondary\"\r\n                      className={classes.fieldIcons}\r\n                      onClick={() => {\r\n                        obj.__key || obj.__value ?\r\n                          props.setConfirmDialog({\r\n                            isOpen: true,\r\n                            title: `Deleting filled field`,\r\n                            subTitle: `Are you sure you want to delete this field?`,\r\n                            onConfirm: () => props.handleRemove(props.index ? `${props.index}` : null, index)\r\n                          })\r\n                          : props.handleRemove(props.index ? `${props.index}` : null, index);\r\n                      }}>\r\n            <RemoveCircleIcon/>\r\n          </IconButton>\r\n          }\r\n          {obj.__type === 'object' &&\r\n          <div className={classes.innerObj}>\r\n            <RecursiveForm objs={obj.__value}\r\n                           handleChildInput={props.handleChildInput}\r\n                           handleChangeChildType={props.handleChangeChildType}\r\n                           handleAdd={props.handleAdd}\r\n                           handleRemove={props.handleRemove}\r\n                           index={props.index ? `${props.index}.${index}` : `${index}`}\r\n                           inputTypes={props.inputTypes}\r\n                           setConfirmDialog={props.setConfirmDialog}\r\n                           handleUpload={props.handleUpload}\r\n                           uploadProgress={props.uploadProgress}\r\n                           validate={props.validate}\r\n                           invalidObjs={props.invalidObjs}\r\n            />\r\n          </div>}\r\n          {obj.__type === 'array' &&\r\n          <div className={classes.innerObj}>\r\n            <RecursiveForm isArray={true}\r\n                           objs={obj.__value}\r\n                           handleChildInput={props.handleChildInput}\r\n                           handleChangeChildType={props.handleChangeChildType}\r\n                           handleAdd={props.handleAdd}\r\n                           handleRemove={props.handleRemove}\r\n                           index={props.index ? `${props.index}.${index}` : `${index}`}\r\n                           inputTypes={props.inputTypes}\r\n                           setConfirmDialog={props.setConfirmDialog}\r\n                           handleUpload={props.handleUpload}\r\n                           uploadProgress={props.uploadProgress}\r\n                           validate={props.validate}\r\n                           invalidObjs={props.invalidObjs}\r\n            />\r\n          </div>}\r\n          {obj.__type === 'rich-text' &&\r\n          <div className={classes.innerObj}>\r\n            <RichTextDialog readOnly={false} value={obj.__value}\r\n                            handleChildInput={props.handleChildInput}\r\n                            index={props.index ? `${props.index}.${index}` : `${index}`}/>\r\n            <ReactQuill className={classes.rtfEditor} readOnly={true} value={obj.__value}/>\r\n          </div>}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecursiveForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\RecursiveMain.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ProgressWithPercentage.js",["163"],"import CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst ProgressWithPercentage = (props) => {\r\n\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {props.value < 100 ?\r\n          <Typography variant=\"caption\" component=\"div\">{props.value}</Typography>\r\n          : <IconButton\r\n            component={Link}\r\n            to={{ pathname: process.env.REACT_APP_SERVER_BASE_URL + props.file.fileName }}\r\n            target={'_blank'}\r\n            color=\"primary\">\r\n            <ExitToAppIcon/>\r\n          </IconButton>}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProgressWithPercentage;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\RichTextDialog\\RichTextDialog.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":33,"column":6,"nodeType":"170","endLine":33,"endColumn":8,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"169","line":36,"column":6,"nodeType":"170","endLine":36,"endColumn":22,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":23,"nodeType":"175","messageId":"176","endLine":2,"endColumn":36},{"ruleId":"173","severity":1,"message":"177","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":19,"column":6,"nodeType":"170","endLine":19,"endColumn":8,"suggestions":"178"},{"ruleId":"168","severity":1,"message":"169","line":23,"column":6,"nodeType":"170","endLine":23,"endColumn":17,"suggestions":"179"},{"ruleId":"168","severity":1,"message":"169","line":18,"column":6,"nodeType":"170","endLine":18,"endColumn":8,"suggestions":"180"},{"ruleId":"168","severity":1,"message":"169","line":19,"column":6,"nodeType":"170","endLine":19,"endColumn":8,"suggestions":"181"},{"ruleId":"168","severity":1,"message":"169","line":23,"column":6,"nodeType":"170","endLine":23,"endColumn":17,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":88,"column":11,"nodeType":"185","endLine":88,"endColumn":44},{"ruleId":"173","severity":1,"message":"186","line":4,"column":21,"nodeType":"175","messageId":"176","endLine":4,"endColumn":35},{"ruleId":"173","severity":1,"message":"187","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"173","severity":1,"message":"188","line":4,"column":21,"nodeType":"175","messageId":"176","endLine":4,"endColumn":34},{"ruleId":"173","severity":1,"message":"189","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"190","line":5,"column":15,"nodeType":"175","messageId":"176","endLine":5,"endColumn":24},{"ruleId":"173","severity":1,"message":"188","line":11,"column":10,"nodeType":"175","messageId":"176","endLine":11,"endColumn":23},{"ruleId":"173","severity":1,"message":"191","line":43,"column":26,"nodeType":"175","messageId":"176","endLine":43,"endColumn":43},{"ruleId":"168","severity":1,"message":"192","line":49,"column":6,"nodeType":"170","endLine":49,"endColumn":25,"suggestions":"193"},{"ruleId":"173","severity":1,"message":"189","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"194","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":20},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["197"],["198"],"no-unused-vars","'setSuccessMsg' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.",["199"],["200"],["201"],["202"],["203"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'passwordsMatch' is defined but never used.","'minLength' is defined but never used.","'requiredField' is defined but never used.","'useState' is defined but never used.","'TextField' is defined but never used.","'setUploadProgress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleAddInitialFields'. Either include it or remove the dependency array.",["204"],"'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"205","fix":"209"},{"desc":"210","fix":"211"},{"desc":"205","fix":"212"},{"desc":"205","fix":"213"},{"desc":"210","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [props]",{"range":"217","text":"218"},"Update the dependencies array to be: [props, props.isAuthed]",{"range":"219","text":"220"},{"range":"221","text":"218"},"Update the dependencies array to be: [props, props.obj]",{"range":"222","text":"223"},{"range":"224","text":"218"},{"range":"225","text":"218"},{"range":"226","text":"223"},"Update the dependencies array to be: [handleAddInitialFields, props.initialObjs]",{"range":"227","text":"228"},[1285,1287],"[props]",[1355,1371],"[props, props.isAuthed]",[701,703],[814,825],"[props, props.obj]",[779,781],[734,736],[878,889],[1709,1728],"[handleAddInitialFields, props.initialObjs]"]