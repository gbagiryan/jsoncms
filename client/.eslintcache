[{"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\index.js":"1","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\reportWebVitals.js":"2","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\App.js":"3","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\ReduxStore.js":"4","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AuthSelectors.js":"5","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AppSelectors.js":"6","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AppReducer.js":"7","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\ObjReducer.js":"8","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AuthReducer.js":"9","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\RegisterContainer.js":"10","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\LoginContainer.js":"11","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\HeaderContainer.js":"12","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBarContainer.js":"13","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObj\\EditObjContainer.js":"14","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddNewObjContainer.js":"15","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\MainContainer.js":"16","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\ObjSelectors.js":"17","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\Header.js":"18","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\Login.js":"19","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBar.js":"20","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\Register.js":"21","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\API\\api.js":"22","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\WithAuthRedirect.js":"23","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\ObjForm.js":"24","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\RecursiveTreeForm.js":"25","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\NewRecursiveForm.js":"26","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\ObjTreeForm.js":"27","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\SimpleRecursiveFormContainer.js":"28","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\NewForm.js":"29","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\SimpleRecursiveForm.js":"30","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\Main.js":"31","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Messages.js":"32","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\RecursiveForm.js":"33","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Validators.js":"34","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\RenderTextFields.js":"35","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\ArrayRecursiveForm.js":"36","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\RecursiveMain.js":"37","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ProgressWithPercentage.js":"38","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\EditForm.js":"39","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\EditRecursiveForm.js":"40","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Form\\Form.js":"41"},{"size":432,"mtime":1612184942855,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":2660,"mtime":1613632875757,"results":"45","hashOfConfig":"43"},{"size":651,"mtime":1613628565853,"results":"46","hashOfConfig":"43"},{"size":71,"mtime":1613571610470,"results":"47","hashOfConfig":"43"},{"size":234,"mtime":1613400202804,"results":"48","hashOfConfig":"43"},{"size":1395,"mtime":1613400190499,"results":"49","hashOfConfig":"43"},{"size":2460,"mtime":1613635000206,"results":"50","hashOfConfig":"43"},{"size":1977,"mtime":1613400193936,"results":"51","hashOfConfig":"43"},{"size":1190,"mtime":1613400176262,"results":"52","hashOfConfig":"43"},{"size":1175,"mtime":1613400140279,"results":"53","hashOfConfig":"43"},{"size":790,"mtime":1613572403463,"results":"54","hashOfConfig":"43"},{"size":1405,"mtime":1613996224148,"results":"55","hashOfConfig":"43"},{"size":2859,"mtime":1613996224137,"results":"56","hashOfConfig":"43"},{"size":3055,"mtime":1613980095399,"results":"57","hashOfConfig":"43"},{"size":1874,"mtime":1613999889980,"results":"58","hashOfConfig":"43"},{"size":149,"mtime":1613996224108,"results":"59","hashOfConfig":"43"},{"size":1034,"mtime":1613400119753,"results":"60","hashOfConfig":"43"},{"size":1920,"mtime":1613400130911,"results":"61","hashOfConfig":"43"},{"size":1718,"mtime":1613573722682,"results":"62","hashOfConfig":"43"},{"size":2318,"mtime":1613400172327,"results":"63","hashOfConfig":"43"},{"size":1087,"mtime":1613632372562,"results":"64","hashOfConfig":"43"},{"size":539,"mtime":1613400098550,"results":"65","hashOfConfig":"43"},{"size":2589,"mtime":1613743821587,"results":"66","hashOfConfig":"43"},{"size":3868,"mtime":1613975467704,"results":"67","hashOfConfig":"43"},{"size":4174,"mtime":1613975467688,"results":"68","hashOfConfig":"43"},{"size":2683,"mtime":1613975467704,"results":"69","hashOfConfig":"43"},{"size":750,"mtime":1613980098492,"results":"70","hashOfConfig":"43"},{"size":2421,"mtime":1613975467688,"results":"71","hashOfConfig":"43"},{"size":5832,"mtime":1613983926962,"results":"72","hashOfConfig":"43"},{"size":2215,"mtime":1613975467688,"results":"73","hashOfConfig":"43"},{"size":683,"mtime":1613400077846,"results":"74","hashOfConfig":"43"},{"size":6951,"mtime":1613975467704,"results":"75","hashOfConfig":"43"},{"size":521,"mtime":1613400095255,"results":"76","hashOfConfig":"43"},{"size":349,"mtime":1613400091973,"results":"77","hashOfConfig":"43"},{"size":5933,"mtime":1613647497373,"results":"78","hashOfConfig":"43"},{"size":5366,"mtime":1613975467688,"results":"79","hashOfConfig":"43"},{"size":1559,"mtime":1613975467688,"results":"80","hashOfConfig":"43"},{"size":649,"mtime":1613985987395,"results":"81","hashOfConfig":"43"},{"size":3846,"mtime":1614004431769,"results":"82","hashOfConfig":"43"},{"size":3902,"mtime":1613999689785,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"ri3n3x",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\index.js",[],["184","185"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\reportWebVitals.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\App.js",["186","187"],"import './App.css';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport MainContainer from './Components/Main/MainContainer';\r\nimport { Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport LoginContainer from './Components/Login/LoginContainer';\r\nimport RegisterContainer from './Components/Register/RegisterContainer';\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isAuthed } from './Redux/Selectors/AuthSelectors';\r\nimport { fetchObjs } from './Redux/Reducers/ObjReducer';\r\nimport SideBarContainer from './Components/SideBar/SideBarContainer';\r\nimport AddNewObjContainer from './Components/AddNewObj/AddNewObjContainer';\r\nimport EditObjContainer from './Components/EditObj/EditObjContainer';\r\nimport { initializeApp } from './Redux/Reducers/AppReducer';\r\nimport { isInitialized } from './Redux/Selectors/AppSelectors';\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    minHeight: '100vh'\r\n  }\r\n});\r\n\r\nconst App = (props) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    props.initializeApp();\r\n  }, []);\r\n  useEffect(() => {\r\n    props.fetchObjs(props.isAuthed);\r\n  }, [props.isAuthed]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n\r\n      {props.isInitialized &&\r\n      <Grid container direction={'column'} spacing={1}>\r\n        <Grid item>\r\n          <HeaderContainer/>\r\n        </Grid>\r\n        <Grid item container spacing={2} xs={12}>\r\n          {props.isAuthed\r\n            ?\r\n            <Grid item xs={2}>\r\n              <SideBarContainer/>\r\n            </Grid>\r\n            : null}\r\n          <Grid item xs={props.isAuthed ? 10 : 12}>\r\n            <Paper elevation={4} className={classes.paper}>\r\n              <Switch>\r\n                <Route exact path='/' component={MainContainer}/>\r\n                <Route exact path='/add_obj' component={AddNewObjContainer}/>\r\n                <Route exact path='/login' component={LoginContainer}/>\r\n                <Route exact path='/register' component={RegisterContainer}/>\r\n                <Route exact path='/edit_obj'>\r\n                  <Redirect to=\"/\"/>\r\n                </Route>\r\n                <Route path='/edit_obj/:objId' component={EditObjContainer}/>\r\n              </Switch>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      }\r\n    </BrowserRouter>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  isInitialized: isInitialized(state)\r\n});\r\nconst actionCreators = {\r\n  initializeApp,\r\n  fetchObjs\r\n};\r\nexport default connect(mapStateToProps, actionCreators)(App);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\ReduxStore.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AuthSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AppSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AppReducer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\ObjReducer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AuthReducer.js",["188"],"import { AuthApi } from '../../API/api';\r\nimport { setErrorMsg, setSuccessMsg } from './AppReducer';\r\n\r\nconst AUTH_SET_USER_DATA = 'AUTH_SET_USER_DATA';\r\nconst AUTH_SET_IS_AUTHED = 'AUTH_SET_IS_AUTHED';\r\n\r\nconst initialState = {\r\n  authedUserData: null,\r\n  isAuthed: false\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        authedUserData: action.userData\r\n      };\r\n    case AUTH_SET_IS_AUTHED:\r\n      return {\r\n        ...state,\r\n        isAuthed: action.isAuthed\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//action creators\r\nconst setUserData = (userData) => ({ type: AUTH_SET_USER_DATA, userData });\r\nconst setIsAuthed = (isAuthed) => ({ type: AUTH_SET_IS_AUTHED, isAuthed });\r\n\r\n//thunks\r\nexport const signIn = (username, password) => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.signIn(username, password);\r\n    dispatch(setUserData(res.data));\r\n    dispatch(setIsAuthed(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(setErrorMsg(err.response.data.errorMessage));\r\n  }\r\n};\r\nexport const signOut = () => async (dispatch) => {\r\n  try {\r\n    await AuthApi.signOut();\r\n    dispatch(setUserData(null));\r\n    dispatch(setIsAuthed(false));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const signUp = (username, password) => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.signUp(username, password);\r\n    dispatch(setUserData(res.data));\r\n    dispatch(setIsAuthed(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(setErrorMsg(err.response.data.errorMessage));\r\n  }\r\n};\r\nexport const verifyAuth = () => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.verifyAuth();\r\n    if (res.data) {\r\n      dispatch(setIsAuthed(true));\r\n    } else {\r\n      dispatch(setIsAuthed(false));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport default AuthReducer;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\RegisterContainer.js",["189"],"import { RegisterReduxForm } from './Register';\r\nimport { signUp } from '../../Redux/Reducers/AuthReducer';\r\nimport { connect } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthed } from '../../Redux/Selectors/AuthSelectors';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages } from '../../Redux/Reducers/AppReducer';\r\n\r\nconst RegisterContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = (formData) => {\r\n    props.clearMessages();\r\n    props.signUp(formData.username, formData.password);\r\n  };\r\n  if (props.isAuthed) {\r\n    return <Redirect to={'/'}/>;\r\n  }\r\n  return (\r\n    <RegisterReduxForm onSubmit={handleSubmit} errorMsg={props.errorMsg} successMsg={props.successMsg}/>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  signUp,\r\n  clearMessages\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(RegisterContainer);","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\LoginContainer.js",["190"],"import { LoginReduxForm } from './Login';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../Redux/Reducers/AuthReducer';\r\nimport React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthed } from '../../Redux/Selectors/AuthSelectors';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages } from '../../Redux/Reducers/AppReducer';\r\n\r\nconst LoginContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = (formData) => {\r\n    props.clearMessages();\r\n    props.signIn(formData.username, formData.password);\r\n  };\r\n  if (props.isAuthed) {\r\n    return <Redirect to={'/'}/>;\r\n  }\r\n  return (\r\n    <LoginReduxForm onSubmit={handleSubmit} errorMsg={props.errorMsg} successMsg={props.successMsg}/>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  signIn,\r\n  clearMessages\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(LoginContainer);","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\HeaderContainer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBarContainer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObj\\EditObjContainer.js",["191"],"import { singleObjData } from '../../Redux/Selectors/ObjSelectors';\r\nimport { updateObj } from '../../Redux/Reducers/ObjReducer';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport ObjForm from '../ObjForm/ObjForm';\r\n\r\nconst EditObjContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.obj) {\r\n      setTagsArr(props.obj.tags);\r\n    }\r\n  }, [props.obj]);\r\n\r\n  const [name, setName] = useState('');\r\n  const [tag, setTag] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n\r\n  const handleTagChange = (e) => {\r\n    props.clearMessages();\r\n    setTag(e.target.value);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    props.clearMessages();\r\n    setName(e.target.value);\r\n  };\r\n  const handleAddTag = () => {\r\n    if (tag) {\r\n      if (!tagsArr.includes(tag)) {\r\n        setTagsArr([...tagsArr, tag]);\r\n      } else {\r\n        props.setErrorMsg('Tags must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Tag can\\'t be empty');\r\n    }\r\n  };\r\n\r\n  const handleDeleteTag = (index) => {\r\n    setTagsArr(tagsArr.filter((tag) => tagsArr.indexOf(tag) !== index));\r\n  };\r\n  const [objs, setObjs] = useState([]);\r\n\r\n  const setBaseObj = (subObjs) => {\r\n    setObjs({ ...subObjs });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    props.clearMessages();\r\n    console.log('props');\r\n\r\n    const updatedObj = {\r\n      objs,\r\n      name: name,\r\n      tags: tagsArr\r\n    };\r\n    console.log(props);\r\n    props.updateObj(props.obj._id, updatedObj);\r\n  };\r\n\r\n  return (\r\n    <ObjForm errorMsg={props.errorMsg}\r\n             successMsg={props.successMsg}\r\n             setErrorMsg={props.setErrorMsg}\r\n             clearMessages={props.clearMessages}\r\n             handleSubmit={handleSubmit}\r\n             handleAddTag={handleAddTag}\r\n             tagsArr={tagsArr}\r\n             handleTagChange={handleTagChange}\r\n             name={name}\r\n             handleNameChange={handleNameChange}\r\n             handleDeleteTag={handleDeleteTag}\r\n             setParentValue={setBaseObj}\r\n             existingObjs={props.obj}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  obj: singleObjData(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  updateObj,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(EditObjContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddNewObjContainer.js",["192","193","194","195","196","197","198","199","200","201","202","203"],"import { connect } from 'react-redux';\r\nimport { addNewObj } from '../../Redux/Reducers/ObjReducer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport ObjForm from '../ObjForm/ObjForm';\r\nimport ObjTreeForm from '../ObjForm/ObjTreeForm';\r\nimport RecursiveTreeForm from '../ObjForm/RecursiveTreeForm';\r\nimport NewRecursiveForm from '../ObjForm/NewRecursiveForm';\r\nimport NewForm from '../ObjForm/NewForm';\r\nimport SimpleRecursiveFormContainer from '../ObjForm/SimpleRecursiveFormContainer';\r\nimport SimpleRecursiveForm from '../ObjForm/SimpleRecursiveForm';\r\n\r\nconst AddNewObjContainer = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [tag, setTag] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleTagChange = (e) => {\r\n    props.clearMessages();\r\n    setTag(e.target.value);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    props.clearMessages();\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    if (tag) {\r\n      if (!tagsArr.includes(tag)) {\r\n        setTagsArr([...tagsArr, tag]);\r\n      } else {\r\n        props.setErrorMsg('Tags must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Tag can\\'t be empty');\r\n    }\r\n  };\r\n  const handleDeleteTag = (index) => {\r\n    setTagsArr(tagsArr.filter((tag) => tagsArr.indexOf(tag) !== index));\r\n  };\r\n\r\n  const [objs, setObjs] = useState({});\r\n\r\n  const handleSubmit = () => {\r\n    // props.clearMessages();\r\n    console.log(objs);\r\n    // const newObj = {\r\n    //   objs,\r\n    //   name: 'name',\r\n    //   tags: ['tagsArr']\r\n    // };\r\n    // props.addNewObj(newObj);\r\n  };\r\n\r\n\r\n  const setBaseObj = (subObjs) => {\r\n    setObjs({ ...subObjs });\r\n  };\r\n\r\n\r\n  return (\r\n    <SimpleRecursiveFormContainer setParentState={setBaseObj} handleSubmit={handleSubmit}/>\r\n    // <NewForm setParentValue={setBaseObj} handleSubmit={handleSubmit} tagsArr={tagsArr}/>\r\n    // <ObjForm\r\n    //   errorMsg={props.errorMsg}\r\n    //   successMsg={props.successMsg}\r\n    //   setErrorMsg={props.setErrorMsg}\r\n    //   clearMessages={props.clearMessages}\r\n    //   handleSubmit={handleSubmit}\r\n    //   handleAddTag={handleAddTag}\r\n    //   tagsArr={tagsArr}\r\n    //   handleTagChange={handleTagChange}\r\n    //   name={name}\r\n    //   handleNameChange={handleNameChange}\r\n    //   handleDeleteTag={handleDeleteTag}\r\n    //   setParentValue={setBaseObj}\r\n    // />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  addNewObj,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(AddNewObjContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\MainContainer.js",["204","205","206"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\ObjSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\Login.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBar.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\Register.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\API\\api.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\WithAuthRedirect.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\ObjForm.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\RecursiveTreeForm.js",["207","208","209","210","211"],"import React, { useState } from 'react';\r\nimport { Grid, IconButton, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ObjTreeForm from './ObjTreeForm';\r\nimport ReactQuill from 'react-quill';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport ArrayRecursiveForm from './ArrayRecursiveForm';\r\n\r\nconst inputTypes = [\r\n  { value: 'string', label: 'string' },\r\n  { value: 'array', label: 'array' },\r\n  { value: 'object', label: 'object' },\r\n  { value: 'file', label: 'file' },\r\n  { value: 'rich-text', label: 'rich-text' }\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: '16px auto'\r\n  },\r\n  paperStyle: {\r\n    padding: 20,\r\n    margin: 'auto',\r\n    minHeight: 450,\r\n    width: 600,\r\n  }\r\n}));\r\n\r\nconst RecursiveTreeForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [objs, setObjs] = useState({});\r\n  const [objKey, setObjKey] = useState('');\r\n  const [objValue, setObjValue] = useState('');\r\n  const [type, setType] = useState(inputTypes[0].value);\r\n  const [nextField, setNextField] = useState(false);\r\n\r\n  const handleChangeKey = (e) => {\r\n    // props.clearMessages();\r\n    setObjKey(e.target.value);\r\n  };\r\n  const handleChangeValue = (e) => {\r\n    // props.clearMessages();\r\n    setObjValue(e.target.value);\r\n  };\r\n\r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const addField = () => {\r\n    setNextField(!nextField);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperStyle}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={4}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Key'} name={'key'} label={'Key'}\r\n                     value={objKey} onChange={handleChangeKey}/>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          {type === 'string'\r\n          &&\r\n          <Grid item xs={12}>\r\n            <TextField fullWidth variant=\"outlined\" placeholder={'Value'} name={'value'} label={'Value'}\r\n                       value={objValue} onChange={handleChangeValue}/>\r\n          </Grid>\r\n          }\r\n          {type === 'rich-text'\r\n          &&\r\n          <Grid item xs={12}>\r\n            <ReactQuill value={objValue} onChange={html => handleChangeValue({ target: { value: html } })}/>\r\n          </Grid>\r\n          }\r\n          {type === 'file'\r\n          &&\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <input type={'file'} name={'upload'} />\r\n            </div>\r\n            {/*{(uploadProgress > 0)*/}\r\n            {/*&& <ProgressWithPercentage value={uploadProgress}/>*/}\r\n            {/*}*/}\r\n          </Grid>\r\n          }\r\n          {type === 'object'\r\n          &&\r\n          <p>object</p>\r\n          }\r\n          {type === 'array'\r\n          &&\r\n          <div>\r\n            <p>array</p>\r\n          </div>\r\n          }\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            id=\"standard-select\"\r\n            select\r\n            label=\"Select\"\r\n            value={type}\r\n            onChange={handleChangeType}\r\n            helperText=\"Select type\"\r\n          >\r\n            {inputTypes.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <IconButton onClick={addField} color=\"primary\">\r\n            {nextField ? <RemoveCircleIcon/> : <AddCircleIcon/>}\r\n          </IconButton>\r\n        </Grid>\r\n        {nextField &&\r\n        <RecursiveTreeForm/>\r\n        }\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RecursiveTreeForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\NewRecursiveForm.js",["212","213","214"],"import React, { useEffect, useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Button, Grid, IconButton, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ReactQuill from 'react-quill';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  rtfEditor: {\r\n    margin: theme.spacing(3),\r\n    width: 400,\r\n    '& .ql-container': {\r\n      minHeight: 100\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submitButton: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst NewRecursiveForm = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [fields, setFields] = useState([{ objKey: '', objValue: '', objType: inputTypes[0].value }]);\r\n\r\n  // useEffect(() => {\r\n  //   props.setParentValue(fields);\r\n  //\r\n  // }, [fields]);\r\n\r\n  const getInnerObjs = (subObj) => {\r\n    setFields([...fields, { ...subObj }]);\r\n  };\r\n\r\n  const handleChangeValue = (event, index) => {\r\n    props.setParentValue(fields.map(obj => obj.objValue));\r\n    const values = [...fields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setFields(values);\r\n  };\r\n  const handleAddField = () => {\r\n    setFields([...fields, { objKey: '', objValue: '', objType: inputTypes[0].value }]);\r\n  };\r\n  const handleRemoveField = (index) => {\r\n    const values = [...fields];\r\n    values.splice(index, 1);\r\n    setFields(values);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.root}>\r\n        {fields.map((field, index) => (\r\n          <div key={index}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              placeholder={'Key'}\r\n              name={'objKey'}\r\n              label={'Key'}\r\n              value={field.objKey}\r\n              onChange={(event) => handleChangeValue(event, index)}/>\r\n            {field.objType === 'string' &&\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              placeholder={'Value'}\r\n              name={'objValue'}\r\n              label={'Value'}\r\n              value={field.objValue}\r\n              onChange={(event) => handleChangeValue(event, index)}/>\r\n            }\r\n            {field.objType === 'file' &&\r\n            <input type={'file'} name={'upload'}/>\r\n            }\r\n            {field.objType === 'rich-text' &&\r\n            <ReactQuill className={classes.rtfEditor} value={field.objValue} name={'objValue'}\r\n                        onChange={html => handleChangeValue({ target: { value: html } })}/>\r\n            }\r\n            {field.objType === 'object' &&\r\n            <NewRecursiveForm setParentValue={getInnerObjs}/>\r\n            }\r\n            {field.objType === 'array' &&\r\n            <>array</>\r\n            }\r\n            <TextField\r\n              id=\"standard-select\"\r\n              select\r\n              name={'objType'}\r\n              value={field.objType}\r\n              onChange={(event) => handleChangeValue(event, index)}\r\n            >\r\n              {inputTypes.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <IconButton color=\"primary\" className={classes.fieldIcons} onClick={handleAddField}>\r\n              <AddCircleIcon/>\r\n            </IconButton>\r\n            {fields.length > 1 &&\r\n            <IconButton color=\"secondary\" className={classes.fieldIcons} onClick={() => handleRemoveField(index)}>\r\n              <RemoveCircleIcon/>\r\n            </IconButton>\r\n            }\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewRecursiveForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\ObjTreeForm.js",["215","216"],"import React, { useState } from 'react';\r\nimport { Grid, IconButton, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst ObjTreeForm = (props) => {\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [objKey, setObjKey] = useState('');\r\n  const [objValue, setObjValue] = useState('');\r\n  const [type, setType] = useState(inputTypes[0].value);\r\n  const [nextField, setNextField] = useState(false);\r\n\r\n  const handleChangeKey = (e) => {\r\n    // props.clearMessages();\r\n    setObjKey(e.target.value);\r\n  };\r\n  const handleChangeValue = (e) => {\r\n    // props.clearMessages();\r\n    setObjValue(e.target.value);\r\n  };\r\n\r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const addField = () => {\r\n    setNextField(!nextField);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={4}>\r\n        <TextField fullWidth variant=\"outlined\" placeholder={'Key'} name={'key'} label={'Key'}\r\n                   value={objKey} onChange={handleChangeKey}/>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField fullWidth variant=\"outlined\" placeholder={'Value'} name={'value'} label={'Value'}\r\n                   value={objValue} onChange={handleChangeValue}/>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <TextField\r\n          id=\"standard-select\"\r\n          select\r\n          label=\"Select\"\r\n          value={type}\r\n          onChange={handleChangeType}\r\n          helperText=\"Select type\"\r\n        >\r\n          {inputTypes.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <IconButton onClick={addField} color=\"primary\">\r\n          {nextField ? <RemoveCircleIcon/> : <AddCircleIcon/>}\r\n        </IconButton>\r\n      </Grid>\r\n      {nextField &&\r\n      <div>\r\n        {type === 'string' &&\r\n        <ObjTreeForm/>\r\n        }\r\n        {type === 'file' &&\r\n        <p>file</p>\r\n        }\r\n        {type === 'rich-text' &&\r\n        <p>rich-text</p>\r\n        }\r\n        {type === 'object' &&\r\n        <ObjTreeForm/>\r\n        }\r\n        {type === 'array' &&\r\n        <p>array</p>\r\n        }\r\n      </div>\r\n      }\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ObjTreeForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\SimpleRecursiveFormContainer.js",["217"],"import React, { useEffect } from 'react';\r\nimport SimpleRecursiveForm from './SimpleRecursiveForm';\r\nimport { Button } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  submitButton: {\r\n    margin: theme.spacing(1)\r\n  },\r\n}));\r\nconst SimpleRecursiveFormContainer = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <SimpleRecursiveForm setParentState={props.setParentState} initialObjs={props.initialObjs}/>\r\n      <Button className={classes.submitButton} type={'submit'} variant=\"contained\" color=\"primary\"\r\n              onClick={props.handleSubmit}>Save</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleRecursiveFormContainer;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\NewForm.js",["218","219"],"import {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport React from 'react';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { Error, Success } from '../../Common/Messages';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport RecursiveForm from './RecursiveForm';\r\nimport NewRecursiveForm from './NewRecursiveForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: '16px auto'\r\n  },\r\n  paperStyle: {\r\n    padding: 20,\r\n    margin: 'auto',\r\n    minHeight: 450,\r\n    width: 600,\r\n    border: '1px solid #3f51b5'\r\n  }\r\n}));\r\n\r\nconst ObjForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        {props.errorMsg &&\r\n        <Grid item xs={12}>\r\n          <Error errorMsg={props.errorMsg}/>\r\n        </Grid>\r\n        }\r\n        {props.successMsg &&\r\n        <Grid item xs={12}>\r\n          <Success successMsg={props.successMsg}/>\r\n        </Grid>\r\n        }\r\n        <Grid item xs={12}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Name'} name={'Name'} label={'Name'}\r\n                     value={props.Name} onChange={props.handleNameChange}/>\r\n        </Grid>\r\n\r\n        <NewRecursiveForm setParentValue={props.setParentValue}/>\r\n\r\n        <Grid item xs={12}>\r\n          {props.tagsArr.map((tag) =>\r\n            <>\r\n              {tag}\r\n              <IconButton onClick={() => props.handleDeleteTag(props.tagsArr.indexOf(tag))}\r\n                          color=\"primary\">\r\n                <HighlightOffIcon/>\r\n              </IconButton>\r\n              {', '}\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Tag'} name={'tag'} label={'Tag'}\r\n                     value={props.tag} onChange={props.handleTagChange}/>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <IconButton onClick={props.handleAddTag} color=\"primary\">\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        <Button fullWidth type={'submit'} variant=\"contained\" color=\"primary\"\r\n                className={classes.button} onClick={props.handleSubmit}>Save</Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ObjForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\SimpleRecursiveForm.js",["220"],"import React, { useEffect, useState } from 'react';\r\nimport { IconButton, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  rtfEditor: {\r\n    margin: theme.spacing(1),\r\n    width: 400,\r\n    '& .ql-container': {\r\n      // minHeight: 100\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  innerObj: {\r\n    marginLeft: theme.spacing(10)\r\n  }\r\n}));\r\n\r\nconst SimpleRecursiveForm = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [objs, setObjs] = useState([{ __key: '', __value: '', __type: inputTypes[0].value }]);\r\n\r\n  const [uploadProgress, setUploadProgress] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   if (props.initialObjs) {\r\n  //     handleAddInitialFields(props.initialObjs);\r\n  //   }\r\n  // }, [props.initialObjs]);\r\n\r\n  useEffect(() => {\r\n    props.setParentState(objs, props.parentIndex);\r\n  }, [objs]);\r\n\r\n  const getInnerState = (subObjects, parentIndex) => {\r\n    const values = [...objs];\r\n    values[parentIndex].__key = objs[parentIndex].__key;\r\n    values[parentIndex].__value = { ...subObjects };\r\n    values[parentIndex].__type = objs[parentIndex].__type;\r\n    setObjs(values);\r\n  };\r\n\r\n  // const handleAddInitialFields = (initialObjs) => {\r\n  //   setObjs([]);\r\n  //   Object.keys(initialObjs).map(initObjKey => {\r\n  //     setObjs([...objs, {\r\n  //       __key: initialObjs[initObjKey].__key,\r\n  //       __value: initialObjs[initObjKey].__value,\r\n  //       __type: initialObjs[initObjKey].__type\r\n  //     }]);\r\n  //   });\r\n  // };\r\n\r\n  const handleChangeInput = (event, index) => {\r\n    const values = [...objs];\r\n    values[index][event.target.name] = event.target.value;\r\n    setObjs(values);\r\n  };\r\n  const handleUpload = async (event, index) => {\r\n    const formData = new FormData();\r\n    formData.append('uploadedFile', event.target.files[0]);\r\n    const uploadedFileName = await Axios.post('/api/posts/uploadFile', formData, {\r\n      onUploadProgress: progressEvent => {\r\n        const { loaded, total } = progressEvent;\r\n        const uploads = [...uploadProgress];\r\n        uploads[index] = (Math.floor((loaded * 100) / total));\r\n        setUploadProgress(uploads);\r\n      }\r\n    });\r\n    const values = [...objs];\r\n    values[index][event.target.name] = event.target.value;\r\n    values[index].__value = uploadedFileName.data;\r\n    setObjs(values);\r\n  };\r\n  const handleChangeType = (event, index) => {\r\n    const values = [...objs];\r\n    values[index].__value = '';\r\n    values[index].__type = event.target.value;\r\n    setObjs(values);\r\n  };\r\n\r\n  const handleAddField = () => {\r\n    setObjs([...objs, { __key: '', __value: '', __type: inputTypes[0].value }]);\r\n  };\r\n\r\n  const handleRemoveField = (index) => {\r\n    const values = [...objs];\r\n    values.splice(index, 1);\r\n    setObjs(values);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {objs.map((field, index) =>\r\n        <div>\r\n          <TextField\r\n            placeholder={'Key'}\r\n            name={'__key'}\r\n            value={field.__key}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Key'}\r\n            onChange={(event) => handleChangeInput(event, index)}/>\r\n          {field.__type === 'string' &&\r\n          <TextField\r\n            placeholder={'Value'}\r\n            name={'__value'}\r\n            value={field.__value}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Value'}\r\n            onChange={(event) => handleChangeInput(event, index)}/>\r\n          }\r\n          {field.__type === 'file' &&\r\n          <>\r\n            <input type={'file'} name={'upload'} onChange={(event) => handleUpload(event, index)}/>\r\n            {(uploadProgress[index] > 0)\r\n            && <ProgressWithPercentage value={uploadProgress[index]} index={index} file={field.__value}/>\r\n            }\r\n          </>\r\n          }\r\n          <TextField\r\n            id=\"standard-select\"\r\n            select\r\n            name={'__type'}\r\n            value={field.__type}\r\n            onChange={(event) => handleChangeType(event, index)}\r\n          >{inputTypes.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n          </TextField>\r\n          <IconButton color=\"primary\" className={classes.fieldIcons} onClick={handleAddField}>\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n          {objs.length > 1 &&\r\n          <IconButton color=\"secondary\" className={classes.fieldIcons} onClick={() => handleRemoveField(index)}>\r\n            <RemoveCircleIcon/>\r\n          </IconButton>\r\n          }\r\n          <div className={classes.innerObj}>\r\n            {field.__type === 'object' &&\r\n            <SimpleRecursiveForm setParentState={getInnerState} parentIndex={index} initialObjs={field.__value}/>}\r\n            {field.__type === 'rich-text' &&\r\n            <ReactQuill className={classes.rtfEditor} value={field.__value}\r\n                        onChange={html => handleChangeInput({ target: { value: html, name: '__value' } }, index)}/>}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleRecursiveForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\Main.js",["221","222","223","224","225","226","227","228","229","230"],"import React from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid, IconButton,\r\n  makeStyles,\r\n  Paper, Table, TableBody, TableCell,\r\n  TableContainer, TableHead, TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Parser from 'html-react-parser';\r\nimport { Link } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport RecursiveMain from './RecursiveMain';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    minHeight: 200,\r\n    width: 300,\r\n    padding: theme.spacing(2)\r\n  },\r\n  objPreview: {\r\n    margin: 'auto'\r\n  },\r\n  buttons: {\r\n    textAlign: 'right'\r\n  }\r\n}));\r\n\r\nconst Main = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      {props.obj\r\n        ? <Grid item xs={9} className={classes.objPreview}>\r\n          <Card elevation={4}>\r\n            <div className={classes.buttons}>\r\n              <Button onClick={props.handleDeleteObj}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      endIcon={<DeleteForeverIcon/>}>Delete</Button>\r\n              <Button component={Link} to={`/edit_obj/${props.obj._id}`} variant=\"contained\"\r\n                      color=\"primary\" className={classes.button}\r\n                      endIcon={<EditIcon/>}>Edit</Button>\r\n            </div>\r\n            <Card>\r\n              <CardHeader\r\n                title={props.obj.name}\r\n              />\r\n            </Card>\r\n\r\n            <RecursiveMain setParentState={props.setParentState} objs={props.obj.objs}/>\r\n\r\n            <CardContent>\r\n              <p>Tags</p>\r\n              <Typography variant=\"body1\" color=\"primary\" component=\"p\">\r\n                {props.obj.tags.map((tag) =>\r\n                  (props.obj.tags.length > 1 ? tag + ', ' : tag)\r\n                )}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        : <div>\r\n          Chose an Object to display\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Messages.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\RecursiveForm.js",["231"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Table, TableBody, TableCell,\r\n  TableContainer,\r\n  TableHead, TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Parser from 'html-react-parser';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport ArrayRecursiveForm from './ArrayRecursiveForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paperStyle: {\r\n    padding: 20,\r\n    margin: 'auto',\r\n    width: 600,\r\n    border: '1px solid #3f51b5'\r\n  }\r\n}));\r\n\r\nconst RecursiveForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [subObjs, setSubObjs] = useState({});\r\n  const [subObjKey, setSubObjKey] = useState('');\r\n  const [subObjValue, setSubObjValue] = useState('');\r\n\r\n  const [type, setType] = useState(inputTypes[0].value);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (props.existingObjs) {\r\n      setSubObjs(props.existingObjs.objs);\r\n    }\r\n  }, [props.existingObjs]);\r\n\r\n  useEffect(() => {\r\n    props.setParentValue(subObjs);\r\n  }, [subObjValue]);\r\n\r\n  const getInnerObjs = (subSubObj) => {\r\n    setSubObjValue(subSubObj);\r\n  };\r\n\r\n  const handleChangeKey = (e) => {\r\n    props.clearMessages();\r\n    setSubObjKey(e.target.value);\r\n  };\r\n  const handleChangeValue = (e) => {\r\n    props.clearMessages();\r\n    setSubObjValue(e.target.value);\r\n  };\r\n  const handleAddSubObj = () => {\r\n    props.clearMessages();\r\n    if (subObjKey && subObjValue) {\r\n      if (!subObjs.hasOwnProperty(subObjKey)) {\r\n        setSubObjs({ ...subObjs, ...{ [subObjKey]: { subObjValue, type } } });\r\n        setSubObjKey('');\r\n        setSubObjValue('');\r\n      } else {\r\n        props.setErrorMsg('Keys of an object must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Key and Value Required');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    setUploadProgress(0);\r\n    const formData = new FormData();\r\n    formData.append('uploadedFile', e.target.files[0]);\r\n    const uploadedFileName = await Axios.post('/api/posts/uploadFile', formData, {\r\n      onUploadProgress: progressEvent => {\r\n        const { loaded, total } = progressEvent;\r\n        setUploadProgress(Math.floor((loaded * 100) / total));\r\n      }\r\n    });\r\n    setSubObjValue({ ...uploadedFileName.data });\r\n  };\r\n\r\n  const handleDeleteSubObj = (subObjKey) => {\r\n    const { [subObjKey]: tmp, ...rest } = subObjs;\r\n    setSubObjs(rest);\r\n  };\r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperStyle} elevation={2}>\r\n      <TableContainer className={classes.tableContainer} component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Keys</TableCell>\r\n              <TableCell align=\"right\">Values</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.keys(subObjs).map((subObj, i) =>\r\n              <TableRow key={subObj}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {subObj}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{subObjs[subObj].fileName ?\r\n                  <>\r\n                    {subObjs[subObj].originalName}\r\n                    <IconButton\r\n                      component={Link}\r\n                      to={{ pathname: process.env.REACT_APP_SERVER_BASE_URL + subObjs[subObj].fileName }}\r\n                      target={'_blank'}\r\n                      color=\"primary\">\r\n                      <ExitToAppIcon/>\r\n                    </IconButton>\r\n                  </>\r\n                  : subObjs[subObj].name ? subObjs[subObj].name : Parser(JSON.stringify(subObjs[subObj]))}\r\n                  <IconButton\r\n                    onClick={() => handleDeleteSubObj(subObj)}\r\n                    color=\"primary\">\r\n                    <HighlightOffIcon/>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={8}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Key'} name={'key'} label={'Key'}\r\n                     value={subObjKey} onChange={handleChangeKey}/>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            id=\"standard-select\"\r\n            select\r\n            label=\"Select\"\r\n            value={type}\r\n            onChange={handleChangeType}\r\n            helperText=\"Select type\"\r\n          >\r\n            {inputTypes.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <IconButton onClick={handleAddSubObj} color=\"primary\">\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        {type === 'string'\r\n        &&\r\n        <Grid item xs={12}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Value'} name={'value'} label={'Value'}\r\n                     value={subObjValue} onChange={handleChangeValue}/>\r\n        </Grid>\r\n        }\r\n        {type === 'rich-text'\r\n        &&\r\n        <Grid item xs={12}>\r\n          <ReactQuill value={subObjValue} onChange={html => handleChangeValue({ target: { value: html } })}/>\r\n        </Grid>\r\n        }\r\n        {type === 'file'\r\n        &&\r\n        <Grid item xs={12}>\r\n          <div>\r\n            <input type={'file'} name={'upload'} onChange={handleUpload}/>\r\n          </div>\r\n          {(uploadProgress > 0)\r\n          && <ProgressWithPercentage value={uploadProgress}/>\r\n          }\r\n        </Grid>\r\n        }\r\n        {type === 'object'\r\n        &&\r\n        <RecursiveForm setParentValue={getInnerObjs}\r\n                       setErrorMsg={props.setErrorMsg}\r\n                       clearMessages={props.clearMessages}/>\r\n        }\r\n        {type === 'array'\r\n        &&\r\n        <div>\r\n          <ArrayRecursiveForm setParentValue={getInnerObjs}\r\n                              setErrorMsg={props.setErrorMsg}\r\n                              clearMessages={props.clearMessages}/>\r\n        </div>\r\n        }\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RecursiveForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Validators.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\RenderTextFields.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\ArrayRecursiveForm.js",["232"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Table, TableBody, TableCell,\r\n  TableContainer,\r\n  TableHead, TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Parser from 'html-react-parser';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport RecursiveForm from './RecursiveForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paperStyle: {\r\n    padding: 20,\r\n    margin: 'auto',\r\n    width: 600,\r\n    border: '1px solid #3f51b5'\r\n  }\r\n}));\r\n\r\nconst ArrayRecursiveForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [subObjs, setSubObjs] = useState([]);\r\n  const [subObjValue, setSubObjValue] = useState('');\r\n\r\n  const [type, setType] = useState(inputTypes[0].value);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.setParentValue(subObjs);\r\n  }, [subObjs]);\r\n\r\n  const getInnerObjs = (subSubObj) => {\r\n    setSubObjValue(subSubObj);\r\n  };\r\n\r\n  const handleChangeValue = (e) => {\r\n    props.clearMessages();\r\n    setSubObjValue(e.target.value);\r\n  };\r\n  const handleAddSubObj = () => {\r\n    props.clearMessages();\r\n    if (subObjValue) {\r\n      setSubObjs([...subObjs, { subObjValue, type }]);\r\n      setSubObjValue('');\r\n    } else {\r\n      props.setErrorMsg('Value Required');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    setUploadProgress(0);\r\n    const formData = new FormData();\r\n    formData.append('uploadedFile', e.target.files[0]);\r\n    const uploadedFileName = await Axios.post('/api/posts/uploadFile', formData, {\r\n      onUploadProgress: progressEvent => {\r\n        const { loaded, total } = progressEvent;\r\n        setUploadProgress(Math.floor((loaded * 100) / total));\r\n      }\r\n    });\r\n    setSubObjValue({ ...uploadedFileName.data });\r\n  };\r\n\r\n  const handleDeleteSubObj = (index) => {\r\n    setSubObjs([...subObjs.filter((el) => subObjs.indexOf(el) !== index)]);\r\n  };\r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperStyle} elevation={2}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"right\">Values</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {subObjs.map((item, i) =>\r\n              <TableRow key={item._id}>\r\n                <TableCell align=\"right\">{item.fileName ?\r\n                  <>\r\n                    {item.originalName}\r\n                    <IconButton\r\n                      component={Link}\r\n                      to={{ pathname: process.env.REACT_APP_SERVER_BASE_URL + subObjs.fileName }}\r\n                      target={'_blank'}\r\n                      color=\"primary\">\r\n                      <ExitToAppIcon/>\r\n                    </IconButton>\r\n                  </>\r\n                  : item.name ? item.name : Parser(JSON.stringify(item))}\r\n                  <IconButton\r\n                    onClick={() => handleDeleteSubObj(subObjs.indexOf(item))}\r\n                    color=\"primary\">\r\n                    <HighlightOffIcon/>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Grid item xs={2}>\r\n        <TextField\r\n          id=\"standard-select\"\r\n          select\r\n          label=\"Select\"\r\n          value={type}\r\n          onChange={handleChangeType}\r\n          helperText=\"Select type\"\r\n        >\r\n          {inputTypes.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <IconButton onClick={handleAddSubObj} color=\"primary\">\r\n          <AddCircleIcon/>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        {type === 'string'\r\n        &&\r\n        <Grid item xs={8}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Value'} name={'value'} label={'Value'}\r\n                     value={subObjValue} onChange={handleChangeValue}/>\r\n        </Grid>\r\n        }\r\n        {type === 'rich-text'\r\n        &&\r\n        <Grid item xs={8}>\r\n          <ReactQuill value={subObjValue} onChange={html => handleChangeValue({ target: { value: html } })}/>\r\n        </Grid>\r\n        }\r\n        {type === 'file'\r\n        &&\r\n        <Grid item xs={8}>\r\n          <div>\r\n            <input type={'file'} name={'upload'} onChange={handleUpload}/>\r\n          </div>\r\n          {(uploadProgress > 0)\r\n          && <ProgressWithPercentage value={uploadProgress}/>\r\n          }\r\n        </Grid>\r\n        }\r\n        {type === 'object'\r\n        &&\r\n        <RecursiveForm setParentValue={getInnerObjs}\r\n                       setErrorMsg={props.setErrorMsg}\r\n                       clearMessages={props.clearMessages}/>\r\n        }\r\n        {type === 'array'\r\n        &&\r\n        <div>\r\n          <ArrayRecursiveForm setParentValue={getInnerObjs}\r\n                              setErrorMsg={props.setErrorMsg}\r\n                              clearMessages={props.clearMessages}/>\r\n        </div>\r\n        }\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ArrayRecursiveForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\RecursiveMain.js",["233"],"import {\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  rtfEditor: {\r\n    margin: theme.spacing(1),\r\n    width: 400,\r\n    '& .ql-container': {\r\n      minHeight: 100\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  innerObj: {\r\n    marginLeft: theme.spacing(10)\r\n  }\r\n}));\r\n\r\nconst RecursiveMain = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [objs, setObjs] = useState([{ __key: '', __value: '', __type: inputTypes[0].value }]);\r\n\r\n  const [uploadProgress, setUploadProgress] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.setParentState(objs, props.parentIndex);\r\n  }, [objs]);\r\n\r\n  const handleChangeInput = (event, index) => {\r\n    const values = [...objs];\r\n    values[index][event.target.name] = event.target.value;\r\n    setObjs(values);\r\n  };\r\n  const handleUpload = async (event, index) => {\r\n    const formData = new FormData();\r\n    formData.append('uploadedFile', event.target.files[0]);\r\n    const uploadedFileName = await Axios.post('/api/posts/uploadFile', formData, {\r\n      onUploadProgress: progressEvent => {\r\n        const { loaded, total } = progressEvent;\r\n        const uploads = [...uploadProgress];\r\n        uploads[index] = (Math.floor((loaded * 100) / total));\r\n        setUploadProgress(uploads);\r\n      }\r\n    });\r\n    const values = [...objs];\r\n    values[index][event.target.name] = event.target.value;\r\n    values[index].__value = uploadedFileName.data;\r\n    setObjs(values);\r\n  };\r\n  const handleChangeType = (event, index) => {\r\n    const values = [...objs];\r\n    values[index].__value = '';\r\n    values[index].__type = event.target.value;\r\n    setObjs(values);\r\n  };\r\n\r\n  const getInnerState = (subObjects, parentIndex) => {\r\n    const values = [...objs];\r\n    values[parentIndex].__key = objs[parentIndex].__key;\r\n    values[parentIndex].__value = { ...subObjects };\r\n    values[parentIndex].__type = objs[parentIndex].__type;\r\n    setObjs(values);\r\n  };\r\n\r\n  const handleAddField = () => {\r\n    setObjs([...objs, { __key: '', __value: '', __type: inputTypes[0].value }]);\r\n  };\r\n\r\n  const handleRemoveField = (index) => {\r\n    const values = [...objs];\r\n    values.splice(index, 1);\r\n    setObjs(values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {Object.keys(props.objs).map((objKey, index) =>\r\n        <div>\r\n          <TextField\r\n            placeholder={'Key'}\r\n            name={'__key'}\r\n            value={props.objs[objKey].__key}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Key'}\r\n            onChange={(event) => handleChangeInput(event, index)}/>\r\n          {props.objs[objKey].__type === 'string' &&\r\n          <TextField\r\n            placeholder={'Value'}\r\n            name={'__value'}\r\n            value={props.objs[objKey].__value}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Value'}\r\n            onChange={(event) => handleChangeInput(event, index)}/>\r\n          }\r\n          {props.objs[objKey].__type === 'file' &&\r\n          <>\r\n            <input type={'file'} name={'upload'} onChange={(event) => handleUpload(event, index)}/>\r\n            {/*{(uploadProgress[index] > 0)*/}\r\n            {/*&& <ProgressWithPercentage value={uploadProgress[index]} index={index} file={field.__value}/>*/}\r\n            {/*}*/}\r\n          </>\r\n          }\r\n          <TextField\r\n            id=\"standard-select\"\r\n            select\r\n            name={'__type'}\r\n            value={props.objs[objKey].__type}\r\n            onChange={(event) => handleChangeType(event, index)}\r\n          >{inputTypes.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n          </TextField>\r\n          <IconButton color=\"primary\" className={classes.fieldIcons} onClick={handleAddField}>\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n          {objs.length > 1 &&\r\n          <IconButton color=\"secondary\" className={classes.fieldIcons} onClick={() => handleRemoveField(index)}>\r\n            <RemoveCircleIcon/>\r\n          </IconButton>\r\n          }\r\n          <div className={classes.innerObj}>\r\n            {props.objs[objKey].__type === 'object' &&\r\n            <RecursiveMain setParentState={getInnerState} parentIndex={index} objs={props.objs[objKey].__value}/>}\r\n            {props.objs[objKey].__type === 'rich-text' &&\r\n            <ReactQuill className={classes.rtfEditor} value={props.objs[objKey].__value}\r\n                        onChange={html => handleChangeInput({ target: { value: html, name: '__value' } }, index)}/>}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecursiveMain;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ProgressWithPercentage.js",["234"],"import CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n}));\r\n\r\nconst ProgressWithPercentage = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {props.value < 100 ?\r\n          <Typography variant=\"caption\" component=\"div\">{props.value}</Typography>\r\n          // <Typography variant=\"caption\" component=\"div\"\r\n          //             color=\"textSecondary\">{props.value}%\r\n          //   <>\r\n          //     {props.file.originalName}\r\n          //   </>\r\n          // </Typography>\r\n          : <IconButton\r\n            component={Link}\r\n            to={{ pathname: process.env.REACT_APP_SERVER_BASE_URL + props.file.fileName }}\r\n            target={'_blank'}\r\n            color=\"primary\">\r\n            <ExitToAppIcon/>\r\n          </IconButton>}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProgressWithPercentage;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\EditForm.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjForm\\EditRecursiveForm.js",["235","236"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Form\\Form.js",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":29,"column":6,"nodeType":"243","endLine":29,"endColumn":8,"suggestions":"244"},{"ruleId":"241","severity":1,"message":"242","line":32,"column":6,"nodeType":"243","endLine":32,"endColumn":22,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":2,"column":23,"nodeType":"248","messageId":"249","endLine":2,"endColumn":36},{"ruleId":"241","severity":1,"message":"242","line":16,"column":6,"nodeType":"243","endLine":16,"endColumn":8,"suggestions":"250"},{"ruleId":"241","severity":1,"message":"242","line":16,"column":6,"nodeType":"243","endLine":16,"endColumn":8,"suggestions":"251"},{"ruleId":"241","severity":1,"message":"242","line":18,"column":6,"nodeType":"243","endLine":18,"endColumn":8,"suggestions":"252"},{"ruleId":"246","severity":1,"message":"253","line":8,"column":8,"nodeType":"248","messageId":"249","endLine":8,"endColumn":15},{"ruleId":"246","severity":1,"message":"254","line":9,"column":8,"nodeType":"248","messageId":"249","endLine":9,"endColumn":19},{"ruleId":"246","severity":1,"message":"255","line":10,"column":8,"nodeType":"248","messageId":"249","endLine":10,"endColumn":25},{"ruleId":"246","severity":1,"message":"256","line":11,"column":8,"nodeType":"248","messageId":"249","endLine":11,"endColumn":24},{"ruleId":"246","severity":1,"message":"257","line":12,"column":8,"nodeType":"248","messageId":"249","endLine":12,"endColumn":15},{"ruleId":"246","severity":1,"message":"258","line":14,"column":8,"nodeType":"248","messageId":"249","endLine":14,"endColumn":27},{"ruleId":"246","severity":1,"message":"259","line":17,"column":10,"nodeType":"248","messageId":"249","endLine":17,"endColumn":14},{"ruleId":"241","severity":1,"message":"242","line":25,"column":6,"nodeType":"243","endLine":25,"endColumn":8,"suggestions":"260"},{"ruleId":"246","severity":1,"message":"261","line":27,"column":9,"nodeType":"248","messageId":"249","endLine":27,"endColumn":24},{"ruleId":"246","severity":1,"message":"262","line":31,"column":9,"nodeType":"248","messageId":"249","endLine":31,"endColumn":25},{"ruleId":"246","severity":1,"message":"263","line":36,"column":9,"nodeType":"248","messageId":"249","endLine":36,"endColumn":21},{"ruleId":"246","severity":1,"message":"264","line":47,"column":9,"nodeType":"248","messageId":"249","endLine":47,"endColumn":24},{"ruleId":"246","severity":1,"message":"265","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":12},{"ruleId":"246","severity":1,"message":"266","line":8,"column":8,"nodeType":"248","messageId":"249","endLine":8,"endColumn":36},{"ruleId":"246","severity":1,"message":"267","line":10,"column":8,"nodeType":"248","messageId":"249","endLine":10,"endColumn":12},{"ruleId":"246","severity":1,"message":"254","line":6,"column":8,"nodeType":"248","messageId":"249","endLine":6,"endColumn":19},{"ruleId":"246","severity":1,"message":"268","line":8,"column":8,"nodeType":"248","messageId":"249","endLine":8,"endColumn":30},{"ruleId":"246","severity":1,"message":"269","line":9,"column":8,"nodeType":"248","messageId":"249","endLine":9,"endColumn":26},{"ruleId":"246","severity":1,"message":"270","line":37,"column":10,"nodeType":"248","messageId":"249","endLine":37,"endColumn":14},{"ruleId":"246","severity":1,"message":"271","line":37,"column":16,"nodeType":"248","messageId":"249","endLine":37,"endColumn":23},{"ruleId":"246","severity":1,"message":"272","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"273","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":16},{"ruleId":"246","severity":1,"message":"274","line":3,"column":18,"nodeType":"248","messageId":"249","endLine":3,"endColumn":22},{"ruleId":"246","severity":1,"message":"275","line":2,"column":28,"nodeType":"248","messageId":"249","endLine":2,"endColumn":38},{"ruleId":"246","severity":1,"message":"276","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":13},{"ruleId":"246","severity":1,"message":"272","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"276","line":6,"column":3,"nodeType":"248","messageId":"249","endLine":6,"endColumn":8},{"ruleId":"246","severity":1,"message":"277","line":14,"column":8,"nodeType":"248","messageId":"249","endLine":14,"endColumn":21},{"ruleId":"241","severity":1,"message":"242","line":55,"column":6,"nodeType":"243","endLine":55,"endColumn":12,"suggestions":"278"},{"ruleId":"246","severity":1,"message":"279","line":7,"column":9,"nodeType":"248","messageId":"249","endLine":7,"endColumn":19},{"ruleId":"246","severity":1,"message":"276","line":9,"column":3,"nodeType":"248","messageId":"249","endLine":9,"endColumn":8},{"ruleId":"246","severity":1,"message":"280","line":9,"column":10,"nodeType":"248","messageId":"249","endLine":9,"endColumn":15},{"ruleId":"246","severity":1,"message":"281","line":9,"column":17,"nodeType":"248","messageId":"249","endLine":9,"endColumn":26},{"ruleId":"246","severity":1,"message":"282","line":9,"column":28,"nodeType":"248","messageId":"249","endLine":9,"endColumn":37},{"ruleId":"246","severity":1,"message":"283","line":10,"column":3,"nodeType":"248","messageId":"249","endLine":10,"endColumn":17},{"ruleId":"246","severity":1,"message":"284","line":10,"column":19,"nodeType":"248","messageId":"249","endLine":10,"endColumn":28},{"ruleId":"246","severity":1,"message":"285","line":10,"column":30,"nodeType":"248","messageId":"249","endLine":10,"endColumn":38},{"ruleId":"246","severity":1,"message":"286","line":15,"column":8,"nodeType":"248","messageId":"249","endLine":15,"endColumn":14},{"ruleId":"246","severity":1,"message":"287","line":17,"column":8,"nodeType":"248","messageId":"249","endLine":17,"endColumn":21},{"ruleId":"241","severity":1,"message":"288","line":58,"column":6,"nodeType":"243","endLine":58,"endColumn":19,"suggestions":"289"},{"ruleId":"241","severity":1,"message":"242","line":51,"column":6,"nodeType":"243","endLine":51,"endColumn":15,"suggestions":"290"},{"ruleId":"241","severity":1,"message":"242","line":53,"column":6,"nodeType":"243","endLine":53,"endColumn":12,"suggestions":"291"},{"ruleId":"246","severity":1,"message":"292","line":15,"column":9,"nodeType":"248","messageId":"249","endLine":15,"endColumn":16},{"ruleId":"246","severity":1,"message":"268","line":6,"column":8,"nodeType":"248","messageId":"249","endLine":6,"endColumn":30},{"ruleId":"246","severity":1,"message":"293","line":7,"column":8,"nodeType":"248","messageId":"249","endLine":7,"endColumn":13},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["296"],["297"],"no-unused-vars","'setSuccessMsg' is defined but never used.","Identifier","unusedVar",["298"],["299"],["300"],"'ObjForm' is defined but never used.","'ObjTreeForm' is defined but never used.","'RecursiveTreeForm' is defined but never used.","'NewRecursiveForm' is defined but never used.","'NewForm' is defined but never used.","'SimpleRecursiveForm' is defined but never used.","'name' is assigned a value but never used.",["301"],"'handleTagChange' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","'handleAddTag' is assigned a value but never used.","'handleDeleteTag' is assigned a value but never used.","'Main' is defined but never used.","'SimpleRecursiveFormContainer' is defined but never used.","'Form' is defined but never used.","'ProgressWithPercentage' is defined but never used.","'ArrayRecursiveForm' is defined but never used.","'objs' is assigned a value but never used.","'setObjs' is assigned a value but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'Paper' is defined but never used.","'RecursiveForm' is defined but never used.",["302"],"'IconButton' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Parser' is defined but never used.","'ExitToAppIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'subObjs'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["303"],["304"],["305"],"'classes' is assigned a value but never used.","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"306","fix":"310"},{"desc":"306","fix":"311"},{"desc":"306","fix":"312"},{"desc":"306","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"314","fix":"320"},"Update the dependencies array to be: [props]",{"range":"321","text":"322"},"Update the dependencies array to be: [props, props.isAuthed]",{"range":"323","text":"324"},{"range":"325","text":"322"},{"range":"326","text":"322"},{"range":"327","text":"322"},{"range":"328","text":"322"},"Update the dependencies array to be: [objs, props]",{"range":"329","text":"330"},"Update the dependencies array to be: [props, subObjValue, subObjs]",{"range":"331","text":"332"},"Update the dependencies array to be: [props, subObjs]",{"range":"333","text":"334"},{"range":"335","text":"330"},[1172,1174],"[props]",[1242,1258],"[props, props.isAuthed]",[579,581],[570,572],[704,706],[1086,1088],[1531,1537],"[objs, props]",[1656,1669],"[props, subObjValue, subObjs]",[1466,1475],"[props, subObjs]",[1307,1313]]