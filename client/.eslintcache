[{"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\index.js":"1","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\reportWebVitals.js":"2","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\App.js":"3","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\ReduxStore.js":"4","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AppReducer.js":"5","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AuthSelectors.js":"6","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AppSelectors.js":"7","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AuthReducer.js":"8","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\LoginContainer.js":"9","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\HeaderContainer.js":"10","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\RegisterContainer.js":"11","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBarContainer.js":"12","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\ObjectReducer.js":"13","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\MainContainer.js":"14","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObject\\AddNewObjectContainer.js":"15","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObject\\EditObjectContainer.js":"16","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\Login.js":"17","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\Header.js":"18","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\Register.js":"19","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\ObjectSelectors.js":"20","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBar.js":"21","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\API\\api.js":"22","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\WithAuthRedirect.js":"23","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\Main.js":"24","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjectForm\\ObjectForm.js":"25","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Validators.js":"26","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Messages.js":"27","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\RenderTextFields.js":"28","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjectForm\\RecursiveForm.js":"29","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ProgressWithPercentage.js":"30","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjectForm\\ArrayRecursiveForm.js":"31"},{"size":432,"mtime":1612184942855,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":2686,"mtime":1613400222041,"results":"35","hashOfConfig":"33"},{"size":661,"mtime":1613400214477,"results":"36","hashOfConfig":"33"},{"size":1395,"mtime":1613400190499,"results":"37","hashOfConfig":"33"},{"size":223,"mtime":1613400206113,"results":"38","hashOfConfig":"33"},{"size":234,"mtime":1613400202804,"results":"39","hashOfConfig":"33"},{"size":1977,"mtime":1613400193936,"results":"40","hashOfConfig":"33"},{"size":1175,"mtime":1613400140279,"results":"41","hashOfConfig":"33"},{"size":811,"mtime":1613400124838,"results":"42","hashOfConfig":"33"},{"size":1190,"mtime":1613400176262,"results":"43","hashOfConfig":"33"},{"size":1468,"mtime":1613400185150,"results":"44","hashOfConfig":"33"},{"size":2980,"mtime":1613400197986,"results":"45","hashOfConfig":"33"},{"size":827,"mtime":1613459305719,"results":"46","hashOfConfig":"33"},{"size":2466,"mtime":1613485540705,"results":"47","hashOfConfig":"33"},{"size":3090,"mtime":1613485567391,"results":"48","hashOfConfig":"33"},{"size":1920,"mtime":1613400130911,"results":"49","hashOfConfig":"33"},{"size":1034,"mtime":1613400119753,"results":"50","hashOfConfig":"33"},{"size":2318,"mtime":1613400172327,"results":"51","hashOfConfig":"33"},{"size":161,"mtime":1613400211168,"results":"52","hashOfConfig":"33"},{"size":1745,"mtime":1613400181069,"results":"53","hashOfConfig":"33"},{"size":1157,"mtime":1613400068233,"results":"54","hashOfConfig":"33"},{"size":539,"mtime":1613400098550,"results":"55","hashOfConfig":"33"},{"size":3758,"mtime":1613400146812,"results":"56","hashOfConfig":"33"},{"size":2911,"mtime":1613478049157,"results":"57","hashOfConfig":"33"},{"size":521,"mtime":1613400095255,"results":"58","hashOfConfig":"33"},{"size":683,"mtime":1613400077846,"results":"59","hashOfConfig":"33"},{"size":349,"mtime":1613400091973,"results":"60","hashOfConfig":"33"},{"size":7123,"mtime":1613556045430,"results":"61","hashOfConfig":"33"},{"size":839,"mtime":1613400081931,"results":"62","hashOfConfig":"33"},{"size":6032,"mtime":1613556060214,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ri3n3x",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\index.js",[],["137","138"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\reportWebVitals.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\App.js",["139","140"],"import './App.css';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Main from './Components/Main/MainContainer';\r\nimport { Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport LoginContainer from './Components/Login/LoginContainer';\r\nimport RegisterContainer from './Components/Register/RegisterContainer';\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isAuthed } from './Redux/Selectors/AuthSelectors';\r\nimport { fetchObjects } from './Redux/Reducers/ObjectReducer';\r\nimport SideBarContainer from './Components/SideBar/SideBarContainer';\r\nimport AddNewPostContainer from './Components/AddNewObject/AddNewObjectContainer';\r\nimport EditObjectContainer from './Components/EditObject/EditObjectContainer';\r\nimport { initializeApp } from './Redux/Reducers/AppReducer';\r\nimport { isInitialized } from './Redux/Selectors/AppSelectors';\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    minHeight: '100vh'\r\n  }\r\n});\r\n\r\nconst App = (props) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    props.initializeApp();\r\n  }, []);\r\n  useEffect(() => {\r\n    props.fetchObjects(props.isAuthed);\r\n  }, [props.isAuthed]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n\r\n      {props.isInitialized &&\r\n      <Grid container direction={'column'} spacing={1}>\r\n        <Grid item>\r\n          <HeaderContainer/>\r\n        </Grid>\r\n        <Grid item container spacing={2} xs={12}>\r\n          {props.isAuthed\r\n            ?\r\n            <Grid item xs={2}>\r\n              <SideBarContainer/>\r\n            </Grid>\r\n            : null}\r\n          <Grid item xs={props.isAuthed ? 10 : 12}>\r\n            <Paper elevation={4} className={classes.paper}>\r\n              <Switch>\r\n                <Route exact path='/' component={Main}/>\r\n                <Route exact path='/add_object' component={AddNewPostContainer}/>\r\n                <Route exact path='/login' component={LoginContainer}/>\r\n                <Route exact path='/register' component={RegisterContainer}/>\r\n                <Route exact path='/edit_object'>\r\n                  <Redirect to=\"/\"/>\r\n                </Route>\r\n                <Route path='/edit_object/:objectId' component={EditObjectContainer}/>\r\n              </Switch>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      }\r\n    </BrowserRouter>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  isInitialized: isInitialized(state)\r\n});\r\nconst actionCreators = {\r\n  initializeApp,\r\n  fetchObjects\r\n};\r\nexport default connect(mapStateToProps, actionCreators)(App);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\ReduxStore.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AppReducer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AuthSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AppSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AuthReducer.js",["141"],"import { AuthApi } from '../../API/api';\r\nimport { setErrorMsg, setSuccessMsg } from './AppReducer';\r\n\r\nconst AUTH_SET_USER_DATA = 'AUTH_SET_USER_DATA';\r\nconst AUTH_SET_IS_AUTHED = 'AUTH_SET_IS_AUTHED';\r\n\r\nconst initialState = {\r\n  authedUserData: null,\r\n  isAuthed: false\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        authedUserData: action.userData\r\n      };\r\n    case AUTH_SET_IS_AUTHED:\r\n      return {\r\n        ...state,\r\n        isAuthed: action.isAuthed\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//action creators\r\nconst setUserData = (userData) => ({ type: AUTH_SET_USER_DATA, userData });\r\nconst setIsAuthed = (isAuthed) => ({ type: AUTH_SET_IS_AUTHED, isAuthed });\r\n\r\n//thunks\r\nexport const signIn = (username, password) => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.signIn(username, password);\r\n    dispatch(setUserData(res.data));\r\n    dispatch(setIsAuthed(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(setErrorMsg(err.response.data.errorMessage));\r\n  }\r\n};\r\nexport const signOut = () => async (dispatch) => {\r\n  try {\r\n    await AuthApi.signOut();\r\n    dispatch(setUserData(null));\r\n    dispatch(setIsAuthed(false));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const signUp = (username, password) => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.signUp(username, password);\r\n    dispatch(setUserData(res.data));\r\n    dispatch(setIsAuthed(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(setErrorMsg(err.response.data.errorMessage));\r\n  }\r\n};\r\nexport const verifyAuth = () => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.verifyAuth();\r\n    if (res.data) {\r\n      dispatch(setIsAuthed(true));\r\n    } else {\r\n      dispatch(setIsAuthed(false));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport default AuthReducer;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\LoginContainer.js",["142"],"import { LoginReduxForm } from './Login';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../Redux/Reducers/AuthReducer';\r\nimport React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthed } from '../../Redux/Selectors/AuthSelectors';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages } from '../../Redux/Reducers/AppReducer';\r\n\r\nconst LoginContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = (formData) => {\r\n    props.clearMessages();\r\n    props.signIn(formData.username, formData.password);\r\n  };\r\n  if (props.isAuthed) {\r\n    return <Redirect to={'/'}/>;\r\n  }\r\n  return (\r\n    <LoginReduxForm onSubmit={handleSubmit} errorMsg={props.errorMsg} successMsg={props.successMsg}/>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  signIn,\r\n  clearMessages\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(LoginContainer);","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\HeaderContainer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\RegisterContainer.js",["143"],"import { RegisterReduxForm } from './Register';\r\nimport { signUp } from '../../Redux/Reducers/AuthReducer';\r\nimport { connect } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthed } from '../../Redux/Selectors/AuthSelectors';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages } from '../../Redux/Reducers/AppReducer';\r\n\r\nconst RegisterContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = (formData) => {\r\n    props.clearMessages();\r\n    props.signUp(formData.username, formData.password);\r\n  };\r\n  if (props.isAuthed) {\r\n    return <Redirect to={'/'}/>;\r\n  }\r\n  return (\r\n    <RegisterReduxForm onSubmit={handleSubmit} errorMsg={props.errorMsg} successMsg={props.successMsg}/>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  signUp,\r\n  clearMessages\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(RegisterContainer);","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBarContainer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\ObjectReducer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\MainContainer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObject\\AddNewObjectContainer.js",["144"],"import { connect } from 'react-redux';\r\nimport { addNewObject } from '../../Redux/Reducers/ObjectReducer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport ObjectForm from '../ObjectForm/ObjectForm';\r\n\r\nconst AddNewObjectContainer = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [tag, setTag] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleTagChange = (e) => {\r\n    props.clearMessages();\r\n    setTag(e.target.value);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    props.clearMessages();\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    if (tag) {\r\n      if (!tagsArr.includes(tag)) {\r\n        setTagsArr([...tagsArr, tag]);\r\n      } else {\r\n        props.setErrorMsg('Tags must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Tag can\\'t be empty');\r\n    }\r\n  };\r\n  const handleDeleteTag = (index) => {\r\n    setTagsArr(tagsArr.filter((tag) => tagsArr.indexOf(tag) !== index));\r\n  };\r\n\r\n  const [fields, setFields] = useState({});\r\n\r\n  const setBaseObject = (subObjects) => {\r\n    setFields({ ...subObjects });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    props.clearMessages();\r\n    const newObject = {\r\n      name: name,\r\n      fields: fields,\r\n      tags: tagsArr\r\n    };\r\n    props.addNewObject(newObject);\r\n  };\r\n\r\n  return (\r\n    <ObjectForm\r\n      errorMsg={props.errorMsg}\r\n      successMsg={props.successMsg}\r\n      setErrorMsg={props.setErrorMsg}\r\n      clearMessages={props.clearMessages}\r\n      handleSubmit={handleSubmit}\r\n      handleAddTag={handleAddTag}\r\n      tagsArr={tagsArr}\r\n      handleTagChange={handleTagChange}\r\n      name={name}\r\n      handleNameChange={handleNameChange}\r\n      handleDeleteTag={handleDeleteTag}\r\n      setParentValue={setBaseObject}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  addNewObject,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(AddNewObjectContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObject\\EditObjectContainer.js",["145","146"],"import { singleObjectData } from '../../Redux/Selectors/ObjectSelectors';\r\nimport { fetchAnObject, updateObject } from '../../Redux/Reducers/ObjectReducer';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport ObjectForm from '../ObjectForm/ObjectForm';\r\n\r\nconst EditObjectContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const objectId = props.match.params.objectId;\r\n    props.fetchAnObject(objectId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.object) {\r\n      setTagsArr(props.object.tags);\r\n    }\r\n  }, [props.object]);\r\n\r\n  const [name, setName] = useState('');\r\n  const [tag, setTag] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n\r\n  const handleTagChange = (e) => {\r\n    props.clearMessages();\r\n    setTag(e.target.value);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    props.clearMessages();\r\n    setName(e.target.value);\r\n  };\r\n  const handleAddTag = () => {\r\n    if (tag) {\r\n      if (!tagsArr.includes(tag)) {\r\n        setTagsArr([...tagsArr, tag]);\r\n      } else {\r\n        props.setErrorMsg('Tags must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Tag can\\'t be empty');\r\n    }\r\n  };\r\n\r\n  const handleDeleteTag = (index) => {\r\n    setTagsArr(tagsArr.filter((tag) => tagsArr.indexOf(tag) !== index));\r\n  };\r\n  const [fields, setFields] = useState([]);\r\n\r\n  const setBaseObject = (subObjects) => {\r\n    setFields({ ...subObjects });\r\n  };\r\n\r\n  const handleSubmit = (formData) => {\r\n    props.clearMessages();\r\n\r\n    const updatedObject = {\r\n      name: name,\r\n      fields: fields,\r\n      tags: tagsArr\r\n    };\r\n    props.updateObject(props.object._id, updatedObject);\r\n  };\r\n\r\n  return (\r\n    <ObjectForm errorMsg={props.errorMsg}\r\n                successMsg={props.successMsg}\r\n                setErrorMsg={props.setErrorMsg}\r\n                clearMessages={props.clearMessages}\r\n                handleSubmit={handleSubmit}\r\n                handleAddTag={handleAddTag}\r\n                tagsArr={tagsArr}\r\n                handleTagChange={handleTagChange}\r\n                name={name}\r\n                handleNameChange={handleNameChange}\r\n                handleDeleteTag={handleDeleteTag}\r\n                setParentValue={setBaseObject}\r\n                existingObjs={props.object}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  object: singleObjectData(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  updateObject,\r\n  fetchAnObject,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(EditObjectContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\Login.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\Register.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\ObjectSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBar.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\API\\api.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\WithAuthRedirect.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\Main.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjectForm\\ObjectForm.js",["147","148","149","150","151","152","153","154","155","156","157"],"import {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Table, TableBody, TableCell, TableContainer,\r\n  TableHead, TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport React from 'react';\r\nimport { maxLength, required } from '../../Common/Validators';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { Error, Success } from '../../Common/Messages';\r\nimport Parser from 'html-react-parser';\r\nimport { Link } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport RecursiveForm from './RecursiveForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: '16px auto'\r\n  },\r\n  paperStyle: {\r\n    padding: 20,\r\n    margin: 'auto',\r\n    minHeight: 450,\r\n    width: 600,\r\n    border: '1px solid #3f51b5'\r\n  }\r\n}));\r\n\r\nconst maxLength20 = maxLength(20);\r\n\r\nconst ObjectForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paperStyle} elevation={8}>\r\n      <Grid container spacing={2}>\r\n        {props.errorMsg &&\r\n        <Grid item xs={12}>\r\n          <Error errorMsg={props.errorMsg}/>\r\n        </Grid>\r\n        }\r\n        {props.successMsg &&\r\n        <Grid item xs={12}>\r\n          <Success successMsg={props.successMsg}/>\r\n        </Grid>\r\n        }\r\n        <Grid item xs={12}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Name'} name={'Name'} label={'Name'}\r\n                     value={props.Name} onChange={props.handleNameChange}/>\r\n        </Grid>\r\n\r\n        <RecursiveForm setParentValue={props.setParentValue}\r\n                       setErrorMsg={props.setErrorMsg}\r\n                       clearMessages={props.clearMessages}/>\r\n\r\n        <Grid item xs={12}>\r\n          {props.tagsArr.map((tag) =>\r\n            <>\r\n              {tag}\r\n              <IconButton onClick={() => props.handleDeleteTag(props.tagsArr.indexOf(tag))}\r\n                          color=\"primary\">\r\n                <HighlightOffIcon/>\r\n              </IconButton>\r\n              {', '}\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Tag'} name={'tag'} label={'Tag'}\r\n                     value={props.tag} onChange={props.handleTagChange}/>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <IconButton onClick={props.handleAddTag} color=\"primary\">\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        <Button fullWidth type={'submit'} variant=\"contained\" color=\"primary\"\r\n                className={classes.button} onClick={props.handleSubmit}>Save</Button>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ObjectForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Validators.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Messages.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\RenderTextFields.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjectForm\\RecursiveForm.js",["158"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Table, TableBody, TableCell,\r\n  TableContainer,\r\n  TableHead, TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Parser from 'html-react-parser';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport ArrayRecursiveForm from './ArrayRecursiveForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paperStyle: {\r\n    padding: 20,\r\n    margin: 'auto',\r\n    width: 600,\r\n    border: '1px solid #3f51b5'\r\n  }\r\n}));\r\n\r\nconst RecursiveForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [subObjects, setSubObjects] = useState({});\r\n  const [subObjectKey, setSubObjectKey] = useState('');\r\n  const [subObjectValue, setSubObjectValue] = useState('');\r\n\r\n  const [type, setType] = useState(inputTypes[0].value);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (props.existingObjs) {\r\n      setSubObjects(props.existingObjs.fields);\r\n    }\r\n  }, [props.existingObjs]);\r\n\r\n  useEffect(() => {\r\n    props.setParentValue(subObjects);\r\n  }, [subObjects]);\r\n\r\n  const getInnerObjects = (subSubObject) => {\r\n    setSubObjectValue(subSubObject);\r\n  };\r\n\r\n  const handleChangeKey = (e) => {\r\n    props.clearMessages();\r\n    setSubObjectKey(e.target.value);\r\n  };\r\n  const handleChangeValue = (e) => {\r\n    props.clearMessages();\r\n    setSubObjectValue(e.target.value);\r\n  };\r\n  const handleAddSubObject = () => {\r\n    props.clearMessages();\r\n    if (subObjectKey && subObjectValue) {\r\n      if (!subObjects.hasOwnProperty(subObjectKey)) {\r\n        setSubObjects({ ...subObjects, ...{ [subObjectKey]: subObjectValue } });\r\n        setSubObjectKey('');\r\n        setSubObjectValue('');\r\n      } else {\r\n        props.setErrorMsg('Keys of an object must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Key and Value Required');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    setUploadProgress(0);\r\n    const formData = new FormData();\r\n    formData.append('uploadedFile', e.target.files[0]);\r\n    const uploadedFileName = await Axios.post('/api/posts/uploadFile', formData, {\r\n      onUploadProgress: progressEvent => {\r\n        const { loaded, total } = progressEvent;\r\n        setUploadProgress(Math.floor((loaded * 100) / total));\r\n      }\r\n    });\r\n    setSubObjectValue({ ...uploadedFileName.data, 'type': 'file' });\r\n  };\r\n\r\n  const handleDeleteSubObject = (subObjectKey) => {\r\n    const { [subObjectKey]: tmp, ...rest } = subObjects;\r\n    setSubObjects(rest);\r\n  };\r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperStyle} elevation={2}>\r\n      <TableContainer className={classes.tableContainer} component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Keys</TableCell>\r\n              <TableCell align=\"right\">Values</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.keys(subObjects).map((subObject, i) =>\r\n              <TableRow key={subObject}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {subObject}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{subObjects[subObject].fileName ?\r\n                  <>\r\n                    {subObjects[subObject].originalName}\r\n                    <IconButton\r\n                      component={Link}\r\n                      to={{ pathname: process.env.REACT_APP_SERVER_BASE_URL + subObjects[subObject].fileName }}\r\n                      target={'_blank'}\r\n                      color=\"primary\">\r\n                      <ExitToAppIcon/>\r\n                    </IconButton>\r\n                  </>\r\n                  : subObjects[subObject].name ? subObjects[subObject].name : Parser(JSON.stringify(subObjects[subObject]))}\r\n                  <IconButton\r\n                    onClick={() => handleDeleteSubObject(subObject)}\r\n                    color=\"primary\">\r\n                    <HighlightOffIcon/>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={8}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Key'} name={'key'} label={'Key'}\r\n                     value={subObjectKey} onChange={handleChangeKey}/>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            id=\"standard-select\"\r\n            select\r\n            label=\"Select\"\r\n            value={type}\r\n            onChange={handleChangeType}\r\n            helperText=\"Select type\"\r\n          >\r\n            {inputTypes.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <IconButton onClick={handleAddSubObject} color=\"primary\">\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        {type === 'string'\r\n        &&\r\n        <Grid item xs={12}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Value'} name={'value'} label={'Value'}\r\n                     value={subObjectValue} onChange={handleChangeValue}/>\r\n        </Grid>\r\n        }\r\n        {type === 'rich-text'\r\n        &&\r\n        <Grid item xs={12}>\r\n          <ReactQuill value={subObjectValue} onChange={html => handleChangeValue({ target: { value: html } })}/>\r\n        </Grid>\r\n        }\r\n        {type === 'file'\r\n        &&\r\n        <Grid item xs={12}>\r\n          <div>\r\n            <input type={'file'} name={'upload'} onChange={handleUpload}/>\r\n          </div>\r\n          {(uploadProgress > 0)\r\n          && <ProgressWithPercentage value={uploadProgress}/>\r\n          }\r\n        </Grid>\r\n        }\r\n        {type === 'object'\r\n        &&\r\n        <RecursiveForm setParentValue={getInnerObjects}\r\n                       setErrorMsg={props.setErrorMsg}\r\n                       clearMessages={props.clearMessages}/>\r\n        }\r\n        {type === 'array'\r\n        &&\r\n        <div>\r\n          <ArrayRecursiveForm setParentValue={getInnerObjects}\r\n                              setErrorMsg={props.setErrorMsg}\r\n                              clearMessages={props.clearMessages}/>\r\n        </div>\r\n        }\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RecursiveForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ProgressWithPercentage.js",[],["159","160"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\ObjectForm\\ArrayRecursiveForm.js",["161"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Table, TableBody, TableCell,\r\n  TableContainer,\r\n  TableHead, TableRow,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Parser from 'html-react-parser';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport RecursiveForm from './RecursiveForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paperStyle: {\r\n    padding: 20,\r\n    margin: 'auto',\r\n    width: 600,\r\n    border: '1px solid #3f51b5'\r\n  }\r\n}));\r\n\r\nconst ArrayRecursiveForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [subObjects, setSubObjects] = useState([]);\r\n  const [subObjectValue, setSubObjectValue] = useState('');\r\n\r\n  const [type, setType] = useState(inputTypes[0].value);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.setParentValue(subObjects);\r\n  }, [subObjects]);\r\n\r\n  const getInnerObjects = (subSubObject) => {\r\n    setSubObjectValue(subSubObject);\r\n  };\r\n\r\n  const handleChangeValue = (e) => {\r\n    props.clearMessages();\r\n    setSubObjectValue(e.target.value);\r\n  };\r\n  const handleAddSubObject = () => {\r\n    props.clearMessages();\r\n    if (subObjectValue) {\r\n      setSubObjects([...subObjects, subObjectValue]);\r\n      setSubObjectValue('');\r\n    } else {\r\n      props.setErrorMsg('Value Required');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    setUploadProgress(0);\r\n    const formData = new FormData();\r\n    formData.append('uploadedFile', e.target.files[0]);\r\n    const uploadedFileName = await Axios.post('/api/posts/uploadFile', formData, {\r\n      onUploadProgress: progressEvent => {\r\n        const { loaded, total } = progressEvent;\r\n        setUploadProgress(Math.floor((loaded * 100) / total));\r\n      }\r\n    });\r\n    setSubObjectValue({ ...uploadedFileName.data, 'type': 'file' });\r\n  };\r\n\r\n  const handleDeleteSubObject = (index) => {\r\n    setSubObjects([...subObjects.filter((el) => subObjects.indexOf(el) !== index)]);\r\n  };\r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperStyle} elevation={2}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"right\">Values</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {subObjects.map((item, i) =>\r\n              <TableRow key={item._id}>\r\n                <TableCell align=\"right\">{item.fileName ?\r\n                  <>\r\n                    {item.originalName}\r\n                    <IconButton\r\n                      component={Link}\r\n                      to={{ pathname: process.env.REACT_APP_SERVER_BASE_URL + subObjects.fileName }}\r\n                      target={'_blank'}\r\n                      color=\"primary\">\r\n                      <ExitToAppIcon/>\r\n                    </IconButton>\r\n                  </>\r\n                  : item.name ? item.name : Parser(JSON.stringify(item))}\r\n                  <IconButton\r\n                    onClick={() => handleDeleteSubObject(subObjects.indexOf(item))}\r\n                    color=\"primary\">\r\n                    <HighlightOffIcon/>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Grid item xs={2}>\r\n        <TextField\r\n          id=\"standard-select\"\r\n          select\r\n          label=\"Select\"\r\n          value={type}\r\n          onChange={handleChangeType}\r\n          helperText=\"Select type\"\r\n        >\r\n          {inputTypes.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <IconButton onClick={handleAddSubObject} color=\"primary\">\r\n          <AddCircleIcon/>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        {type === 'string'\r\n        &&\r\n        <Grid item xs={8}>\r\n          <TextField fullWidth variant=\"outlined\" placeholder={'Value'} name={'value'} label={'Value'}\r\n                     value={subObjectValue} onChange={handleChangeValue}/>\r\n        </Grid>\r\n        }\r\n        {type === 'rich-text'\r\n        &&\r\n        <Grid item xs={8}>\r\n          <ReactQuill value={subObjectValue} onChange={html => handleChangeValue({ target: { value: html } })}/>\r\n        </Grid>\r\n        }\r\n        {type === 'file'\r\n        &&\r\n        <Grid item xs={8}>\r\n          <div>\r\n            <input type={'file'} name={'upload'} onChange={handleUpload}/>\r\n          </div>\r\n          {(uploadProgress > 0)\r\n          && <ProgressWithPercentage value={uploadProgress}/>\r\n          }\r\n        </Grid>\r\n        }\r\n        {type === 'object'\r\n        &&\r\n        <RecursiveForm setParentValue={getInnerObjects}\r\n                       setErrorMsg={props.setErrorMsg}\r\n                       clearMessages={props.clearMessages}/>\r\n        }\r\n        {type === 'array'\r\n        &&\r\n        <div>\r\n          <ArrayRecursiveForm setParentValue={getInnerObjects}\r\n                              setErrorMsg={props.setErrorMsg}\r\n                              clearMessages={props.clearMessages}/>\r\n        </div>\r\n        }\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ArrayRecursiveForm;\r\n",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":29,"column":6,"nodeType":"168","endLine":29,"endColumn":8,"suggestions":"169"},{"ruleId":"166","severity":1,"message":"167","line":32,"column":6,"nodeType":"168","endLine":32,"endColumn":22,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":2,"column":23,"nodeType":"173","messageId":"174","endLine":2,"endColumn":36},{"ruleId":"166","severity":1,"message":"167","line":16,"column":6,"nodeType":"168","endLine":16,"endColumn":8,"suggestions":"175"},{"ruleId":"166","severity":1,"message":"167","line":16,"column":6,"nodeType":"168","endLine":16,"endColumn":8,"suggestions":"176"},{"ruleId":"166","severity":1,"message":"167","line":19,"column":6,"nodeType":"168","endLine":19,"endColumn":8,"suggestions":"177"},{"ruleId":"166","severity":1,"message":"167","line":18,"column":6,"nodeType":"168","endLine":18,"endColumn":8,"suggestions":"178"},{"ruleId":"166","severity":1,"message":"167","line":23,"column":6,"nodeType":"168","endLine":23,"endColumn":8,"suggestions":"179"},{"ruleId":"171","severity":1,"message":"180","line":7,"column":3,"nodeType":"173","messageId":"174","endLine":7,"endColumn":8},{"ruleId":"171","severity":1,"message":"181","line":7,"column":10,"nodeType":"173","messageId":"174","endLine":7,"endColumn":19},{"ruleId":"171","severity":1,"message":"182","line":7,"column":21,"nodeType":"173","messageId":"174","endLine":7,"endColumn":30},{"ruleId":"171","severity":1,"message":"183","line":7,"column":32,"nodeType":"173","messageId":"174","endLine":7,"endColumn":46},{"ruleId":"171","severity":1,"message":"184","line":8,"column":3,"nodeType":"173","messageId":"174","endLine":8,"endColumn":12},{"ruleId":"171","severity":1,"message":"185","line":8,"column":14,"nodeType":"173","messageId":"174","endLine":8,"endColumn":22},{"ruleId":"171","severity":1,"message":"186","line":13,"column":21,"nodeType":"173","messageId":"174","endLine":13,"endColumn":29},{"ruleId":"171","severity":1,"message":"187","line":16,"column":8,"nodeType":"173","messageId":"174","endLine":16,"endColumn":14},{"ruleId":"171","severity":1,"message":"188","line":17,"column":10,"nodeType":"173","messageId":"174","endLine":17,"endColumn":14},{"ruleId":"171","severity":1,"message":"189","line":18,"column":8,"nodeType":"173","messageId":"174","endLine":18,"endColumn":21},{"ruleId":"171","severity":1,"message":"190","line":38,"column":7,"nodeType":"173","messageId":"174","endLine":38,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":58,"column":6,"nodeType":"168","endLine":58,"endColumn":18,"suggestions":"191"},{"ruleId":"162","replacedBy":"192"},{"ruleId":"164","replacedBy":"193"},{"ruleId":"166","severity":1,"message":"167","line":51,"column":6,"nodeType":"168","endLine":51,"endColumn":18,"suggestions":"194"},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["197"],["198"],"no-unused-vars","'setSuccessMsg' is defined but never used.","Identifier","unusedVar",["199"],["200"],["201"],["202"],["203"],"'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'required' is defined but never used.","'Parser' is defined but never used.","'Link' is defined but never used.","'ExitToAppIcon' is defined but never used.","'maxLength20' is assigned a value but never used.",["204"],["195"],["196"],["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"206","fix":"210"},{"desc":"206","fix":"211"},{"desc":"206","fix":"212"},{"desc":"206","fix":"213"},{"desc":"206","fix":"214"},{"desc":"215","fix":"216"},{"desc":"215","fix":"217"},"Update the dependencies array to be: [props]",{"range":"218","text":"219"},"Update the dependencies array to be: [props, props.isAuthed]",{"range":"220","text":"221"},{"range":"222","text":"219"},{"range":"223","text":"219"},{"range":"224","text":"219"},{"range":"225","text":"219"},{"range":"226","text":"219"},"Update the dependencies array to be: [props, subObjects]",{"range":"227","text":"228"},{"range":"229","text":"228"},[1185,1187],"[props]",[1258,1274],"[props, props.isAuthed]",[570,572],[579,581],[734,736],[743,745],[864,866],[1682,1694],"[props, subObjects]",[1481,1493]]