[{"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\index.js":"1","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\reportWebVitals.js":"2","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\App.js":"3","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\ReduxStore.js":"4","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AuthSelectors.js":"5","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AppSelectors.js":"6","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\ObjReducer.js":"7","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AppReducer.js":"8","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AuthReducer.js":"9","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\MainContainer.js":"10","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\LoginContainer.js":"11","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\RegisterContainer.js":"12","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBarContainer.js":"13","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddNewObjContainer.js":"14","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObj\\EditObjContainer.js":"15","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\HeaderContainer.js":"16","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\Main.js":"17","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\ObjSelectors.js":"18","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\Login.js":"19","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBar.js":"20","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddNewObjForm.js":"21","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\Register.js":"22","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddObjForm.js":"23","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\Header.js":"24","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\API\\api.js":"25","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObj\\EditObjForm.js":"26","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\WithAuthRedirect.js":"27","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ConfirmDialog.js":"28","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Messages.js":"29","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\Recursive.js":"30","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\RecursiveForm\\RecursiveForm.js":"31","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Validators.js":"32","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\RenderTextFields.js":"33","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ProgressWithPercentage.js":"34","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\RecursiveMain.js":"35","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\CreateObj\\CreateObjContainer.js":"36","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\CreateObj\\CreateObjForm.js":"37","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\CreateObj\\CreateObjRecursiveForm.js":"38","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\simpleRecursiveForm\\FormContainer.js":"39","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\simpleRecursiveForm\\RecursiveForm.js":"40"},{"size":450,"mtime":1614260017237,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1614260017239,"results":"43","hashOfConfig":"42"},{"size":2737,"mtime":1614666938169,"results":"44","hashOfConfig":"42"},{"size":651,"mtime":1614260017224,"results":"45","hashOfConfig":"42"},{"size":71,"mtime":1614260017230,"results":"46","hashOfConfig":"42"},{"size":234,"mtime":1614260017225,"results":"47","hashOfConfig":"42"},{"size":2460,"mtime":1614260017223,"results":"48","hashOfConfig":"42"},{"size":1395,"mtime":1614260017219,"results":"49","hashOfConfig":"42"},{"size":1977,"mtime":1614260017221,"results":"50","hashOfConfig":"42"},{"size":2191,"mtime":1614260017178,"results":"51","hashOfConfig":"42"},{"size":1175,"mtime":1614260017175,"results":"52","hashOfConfig":"42"},{"size":1190,"mtime":1614260017182,"results":"53","hashOfConfig":"42"},{"size":1439,"mtime":1614781188550,"results":"54","hashOfConfig":"42"},{"size":3280,"mtime":1614842134867,"results":"55","hashOfConfig":"42"},{"size":4043,"mtime":1614843496363,"results":"56","hashOfConfig":"42"},{"size":790,"mtime":1614260017171,"results":"57","hashOfConfig":"42"},{"size":3123,"mtime":1614260017178,"results":"58","hashOfConfig":"42"},{"size":149,"mtime":1614260017233,"results":"59","hashOfConfig":"42"},{"size":1920,"mtime":1614260017174,"results":"60","hashOfConfig":"42"},{"size":1718,"mtime":1614773376197,"results":"61","hashOfConfig":"42"},{"size":3010,"mtime":1614260017143,"results":"62","hashOfConfig":"42"},{"size":2318,"mtime":1614260017181,"results":"63","hashOfConfig":"42"},{"size":4461,"mtime":1614666516437,"results":"64","hashOfConfig":"42"},{"size":1034,"mtime":1614260017169,"results":"65","hashOfConfig":"42"},{"size":1117,"mtime":1614673252775,"results":"66","hashOfConfig":"42"},{"size":4261,"mtime":1614260017148,"results":"67","hashOfConfig":"42"},{"size":539,"mtime":1614260017137,"results":"68","hashOfConfig":"42"},{"size":1383,"mtime":1614260017134,"results":"69","hashOfConfig":"42"},{"size":683,"mtime":1614260017134,"results":"70","hashOfConfig":"42"},{"size":3001,"mtime":1614666516438,"results":"71","hashOfConfig":"42"},{"size":7704,"mtime":1614782357841,"results":"72","hashOfConfig":"42"},{"size":521,"mtime":1614260017136,"results":"73","hashOfConfig":"42"},{"size":349,"mtime":1614260017136,"results":"74","hashOfConfig":"42"},{"size":1325,"mtime":1614841361391,"results":"75","hashOfConfig":"42"},{"size":3430,"mtime":1614260017179,"results":"76","hashOfConfig":"42"},{"size":2479,"mtime":1614666517567,"results":"77","hashOfConfig":"42"},{"size":495,"mtime":1614666859169,"results":"78","hashOfConfig":"42"},{"size":1016,"mtime":1614666774096,"results":"79","hashOfConfig":"42"},{"size":6701,"mtime":1614843496352,"results":"80","hashOfConfig":"42"},{"size":6236,"mtime":1614841851475,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"ri3n3x",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"132"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"132"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"84"},"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\index.js",[],["181","182"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\reportWebVitals.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\App.js",["183","184","185"],"import './App.css';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport MainContainer from './Components/Main/MainContainer';\r\nimport { Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport LoginContainer from './Components/Login/LoginContainer';\r\nimport RegisterContainer from './Components/Register/RegisterContainer';\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isAuthed } from './Redux/Selectors/AuthSelectors';\r\nimport { fetchObjs } from './Redux/Reducers/ObjReducer';\r\nimport SideBarContainer from './Components/SideBar/SideBarContainer';\r\nimport AddNewObjContainer from './Components/AddNewObj/AddNewObjContainer';\r\nimport EditObjContainer from './Components/EditObj/EditObjContainer';\r\nimport { initializeApp } from './Redux/Reducers/AppReducer';\r\nimport { isInitialized } from './Redux/Selectors/AppSelectors';\r\nimport CreateObjContainer from './Components/CreateObj/CreateObjContainer';\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    minHeight: '100vh'\r\n  }\r\n});\r\n\r\nconst App = (props) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    props.initializeApp();\r\n  }, []);\r\n  useEffect(() => {\r\n    props.fetchObjs(props.isAuthed);\r\n  }, [props.isAuthed]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n\r\n      {props.isInitialized &&\r\n      <Grid container direction={'column'} spacing={1}>\r\n        <Grid item>\r\n          <HeaderContainer/>\r\n        </Grid>\r\n        <Grid item container spacing={2} xs={12}>\r\n          {props.isAuthed\r\n            ?\r\n            <Grid item xs={2}>\r\n              <SideBarContainer/>\r\n            </Grid>\r\n            : null}\r\n          <Grid item xs={props.isAuthed ? 10 : 12}>\r\n            <Paper elevation={4} className={classes.paper}>\r\n              <Switch>\r\n                <Route exact path='/' component={MainContainer}/>\r\n                <Route exact path='/add_obj' component={AddNewObjContainer}/>\r\n                <Route exact path='/login' component={LoginContainer}/>\r\n                <Route exact path='/register' component={RegisterContainer}/>\r\n                <Route exact path='/edit_obj'>\r\n                  <Redirect to=\"/\"/>\r\n                </Route>\r\n                <Route path='/edit_obj/:objId' component={EditObjContainer}/>\r\n              </Switch>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      }\r\n    </BrowserRouter>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  isInitialized: isInitialized(state)\r\n});\r\nconst actionCreators = {\r\n  initializeApp,\r\n  fetchObjs\r\n};\r\nexport default connect(mapStateToProps, actionCreators)(App);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\ReduxStore.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AuthSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\AppSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\ObjReducer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AppReducer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Reducers\\AuthReducer.js",["186"],"import { AuthApi } from '../../API/api';\r\nimport { setErrorMsg, setSuccessMsg } from './AppReducer';\r\n\r\nconst AUTH_SET_USER_DATA = 'AUTH_SET_USER_DATA';\r\nconst AUTH_SET_IS_AUTHED = 'AUTH_SET_IS_AUTHED';\r\n\r\nconst initialState = {\r\n  authedUserData: null,\r\n  isAuthed: false\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        authedUserData: action.userData\r\n      };\r\n    case AUTH_SET_IS_AUTHED:\r\n      return {\r\n        ...state,\r\n        isAuthed: action.isAuthed\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//action creators\r\nconst setUserData = (userData) => ({ type: AUTH_SET_USER_DATA, userData });\r\nconst setIsAuthed = (isAuthed) => ({ type: AUTH_SET_IS_AUTHED, isAuthed });\r\n\r\n//thunks\r\nexport const signIn = (username, password) => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.signIn(username, password);\r\n    dispatch(setUserData(res.data));\r\n    dispatch(setIsAuthed(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(setErrorMsg(err.response.data.errorMessage));\r\n  }\r\n};\r\nexport const signOut = () => async (dispatch) => {\r\n  try {\r\n    await AuthApi.signOut();\r\n    dispatch(setUserData(null));\r\n    dispatch(setIsAuthed(false));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const signUp = (username, password) => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.signUp(username, password);\r\n    dispatch(setUserData(res.data));\r\n    dispatch(setIsAuthed(true));\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(setErrorMsg(err.response.data.errorMessage));\r\n  }\r\n};\r\nexport const verifyAuth = () => async (dispatch) => {\r\n  try {\r\n    const res = await AuthApi.verifyAuth();\r\n    if (res.data) {\r\n      dispatch(setIsAuthed(true));\r\n    } else {\r\n      dispatch(setIsAuthed(false));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport default AuthReducer;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\MainContainer.js",["187","188"],"import { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getSingleObjData } from '../../Redux/Selectors/ObjSelectors';\r\nimport { deleteObj, updateObj } from '../../Redux/Reducers/ObjReducer';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport Main from './Main';\r\n\r\nconst MainContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    if (props.obj) {\r\n      setInitialObjs({ ...props.obj.objs });\r\n      setName(props.obj.name);\r\n      setTagsArr(props.obj.tags);\r\n      setObjId(props.obj._id);\r\n    }\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, [props.obj]);\r\n\r\n  const [name, setName] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n  const [objId, setObjId] = useState([]);\r\n\r\n  const [initialObjs, setInitialObjs] = useState();\r\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' });\r\n\r\n  const handleDeleteObj = (objId) => {\r\n    props.deleteObj(objId);\r\n    setConfirmDialog({ ...confirmDialog, isOpen: false });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.obj ?\r\n        <Main\r\n          errorMsg={props.errorMsg}\r\n          successMsg={props.successMsg}\r\n          setErrorMsg={props.setErrorMsg}\r\n          clearMessages={props.clearMessages}\r\n          initialObjs={initialObjs}\r\n          objId={objId}\r\n          handleDeleteObj={handleDeleteObj}\r\n          tagsArr={tagsArr}\r\n          name={name}\r\n          confirmDialog={confirmDialog}\r\n          setConfirmDialog={setConfirmDialog}\r\n        />\r\n\r\n        : <h2>\r\n          Choose an object to display\r\n        </h2>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state),\r\n  obj: getSingleObjData(state)\r\n});\r\nconst actionCreators = {\r\n  deleteObj,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(MainContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\LoginContainer.js",["189"],"import { LoginReduxForm } from './Login';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../Redux/Reducers/AuthReducer';\r\nimport React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthed } from '../../Redux/Selectors/AuthSelectors';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages } from '../../Redux/Reducers/AppReducer';\r\n\r\nconst LoginContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = (formData) => {\r\n    props.clearMessages();\r\n    props.signIn(formData.username, formData.password);\r\n  };\r\n  if (props.isAuthed) {\r\n    return <Redirect to={'/'}/>;\r\n  }\r\n  return (\r\n    <LoginReduxForm onSubmit={handleSubmit} errorMsg={props.errorMsg} successMsg={props.successMsg}/>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  signIn,\r\n  clearMessages\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(LoginContainer);","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\RegisterContainer.js",["190"],"import { RegisterReduxForm } from './Register';\r\nimport { signUp } from '../../Redux/Reducers/AuthReducer';\r\nimport { connect } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthed } from '../../Redux/Selectors/AuthSelectors';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages } from '../../Redux/Reducers/AppReducer';\r\n\r\nconst RegisterContainer = (props) => {\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = (formData) => {\r\n    props.clearMessages();\r\n    props.signUp(formData.username, formData.password);\r\n  };\r\n  if (props.isAuthed) {\r\n    return <Redirect to={'/'}/>;\r\n  }\r\n  return (\r\n    <RegisterReduxForm onSubmit={handleSubmit} errorMsg={props.errorMsg} successMsg={props.successMsg}/>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthed: isAuthed(state),\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  signUp,\r\n  clearMessages\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(RegisterContainer);","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBarContainer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddNewObjContainer.js",["191"],"import { connect } from 'react-redux';\r\nimport { addNewObj } from '../../Redux/Reducers/ObjReducer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport FormContainer from '../simpleRecursiveForm/FormContainer';\r\n\r\nconst AddNewObjContainer = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [tag, setTag] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleTagChange = (e) => {\r\n    props.clearMessages();\r\n    setTag(e.target.value);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    props.clearMessages();\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    if (tag) {\r\n      if (!tagsArr.includes(tag)) {\r\n        setTagsArr([...tagsArr, tag]);\r\n      } else {\r\n        props.setErrorMsg('Tags must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Tag can\\'t be empty');\r\n    }\r\n  };\r\n  const handleDeleteTag = (index) => {\r\n    setTagsArr(tagsArr.filter((tag) => tagsArr.indexOf(tag) !== index));\r\n  };\r\n\r\n  const handleSubmit = (objs) => {\r\n    props.clearMessages();\r\n    const newObj = {\r\n      objs,\r\n      name: name,\r\n      tags: tagsArr\r\n    };\r\n    props.addNewObj(newObj);\r\n  };\r\n\r\n  return (\r\n    <FormContainer\r\n      errorMsg={props.errorMsg}\r\n      successMsg={props.successMsg}\r\n      setErrorMsg={props.setErrorMsg}\r\n      clearMessages={props.clearMessages}\r\n      tagsArr={tagsArr}\r\n      handleTagChange={handleTagChange}\r\n      handleAddTag={handleAddTag}\r\n      handleDeleteTag={handleDeleteTag}\r\n      name={name}\r\n      handleNameChange={handleNameChange}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n    // <AddObjForm\r\n    //   errorMsg={props.errorMsg}\r\n    //   successMsg={props.successMsg}\r\n    //   setErrorMsg={props.setErrorMsg}\r\n    //   clearMessages={props.clearMessages}\r\n    //   tagsArr={tagsArr}\r\n    //   handleTagChange={handleTagChange}\r\n    //   handleAddTag={handleAddTag}\r\n    //   handleDeleteTag={handleDeleteTag}\r\n    //   name={name}\r\n    //   handleNameChange={handleNameChange}\r\n    //   handleChangeParent={setBaseObj}\r\n    //   handleSubmit={handleSubmit}\r\n    // />\r\n    // <AddNewObjForm\r\n    //   errorMsg={props.errorMsg}\r\n    //   successMsg={props.successMsg}\r\n    //   setErrorMsg={props.setErrorMsg}\r\n    //   clearMessages={props.clearMessages}\r\n    //   tagsArr={tagsArr}\r\n    //   handleTagChange={handleTagChange}\r\n    //   handleAddTag={handleAddTag}\r\n    //   handleDeleteTag={handleDeleteTag}\r\n    //   name={name}\r\n    //   handleNameChange={handleNameChange}\r\n    //   handleChangeParent={setBaseObj}\r\n    //   handleSubmit={handleSubmit}\r\n    // />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  addNewObj,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(AddNewObjContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObj\\EditObjContainer.js",["192","193","194","195"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\HeaderContainer.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\Main.js",["196"],"import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles, TextField\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { Link } from 'react-router-dom';\r\nimport RecursiveMain from './RecursiveMain';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Error, Success } from '../../Common/Messages';\r\nimport ConfirmDialog from '../../Common/ConfirmDialog';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    minHeight: 200,\r\n    width: 300,\r\n    padding: theme.spacing(2)\r\n  },\r\n  objPreview: {\r\n    margin: 'auto'\r\n  },\r\n  buttons: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  tags: {\r\n    border: '1px solid '\r\n  }\r\n}));\r\n\r\nconst Main = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {props.initialObjs ?\r\n        <Grid container spacing={2}>\r\n          {props.errorMsg &&\r\n          <Grid item xs={12}>\r\n            <Error errorMsg={props.errorMsg}/>\r\n          </Grid>\r\n          }\r\n          {props.successMsg &&\r\n          <Grid item xs={12}>\r\n            <Success successMsg={props.successMsg}/>\r\n          </Grid>\r\n          }\r\n\r\n          <Grid container>\r\n            <Grid item xs={8}>\r\n              <TextField variant=\"outlined\"\r\n                         size=\"small\"\r\n                         placeholder={'Name'}\r\n                         name={'name'}\r\n                         label={'Name'}\r\n                         value={props.name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                onClick={() => {\r\n                  props.setConfirmDialog({\r\n                    isOpen: true,\r\n                    title: `Deleting ${props.name}`,\r\n                    subTitle: `Are you sure you want to completely delete this object`,\r\n                    onConfirm: () => props.handleDeleteObj(props.objId)\r\n                  });\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.buttons}\r\n                endIcon={<DeleteForeverIcon/>}>Delete</Button>\r\n              <Button component={Link} to={`/edit_obj/${props.objId}`}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.buttons}\r\n                      endIcon={<EditIcon/>}>Edit</Button>\r\n            </Grid>\r\n          </Grid>\r\n          <RecursiveMain initialObjs={props.initialObjs}/>\r\n          {props.tagsArr.length > 0 &&\r\n          <Grid item xs={7} className={classes.tags}>\r\n            {props.tagsArr.map((tag) =>\r\n              <>\r\n                {tag},\r\n              </>\r\n            )}\r\n          </Grid>\r\n          }\r\n          <ConfirmDialog confirmDialog={props.confirmDialog} setConfirmDialog={props.setConfirmDialog}/>\r\n        </Grid>\r\n        : <h2>\r\n          Choose an object to display\r\n        </h2>\r\n      }\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Redux\\Selectors\\ObjSelectors.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Login\\Login.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\SideBar\\SideBar.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddNewObjForm.js",[],["197","198"],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Register\\Register.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\AddObjForm.js",["199","200"],"import React, { useState } from 'react';\r\nimport { Button, Grid, IconButton, TextField } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport RecursiveForm from '../RecursiveForm/RecursiveForm';\r\nimport { Error, Success } from '../../Common/Messages';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Container from '@material-ui/core/Container';\r\nimport Recursive from './Recursive';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nconst AddNewObjForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [objs, setObjs] = useState([{ __key: '', __value: '', __type: inputTypes[0].value }]);\r\n\r\n  const handleChangeInput = (event, index) => {\r\n    const values = [...objs];\r\n    values[index][event.target.name] = event.target.value;\r\n    setObjs(values);\r\n  };\r\n  const handleChangeType = (event, index) => {\r\n    const values = [...objs];\r\n    values[index].__type = event.target.value;\r\n    values[index].__value = '';\r\n    setObjs(values);\r\n  };\r\n\r\n  const handleAddField = () => {\r\n    setObjs([...objs, { __key: '', __value: '', __type: inputTypes[0].value }]);\r\n  };\r\n  const handleAddInner = (index) => {\r\n    const values = [...objs];\r\n    values[index].__value = [];\r\n    values[index].__value.push({ __key: '', __value: '', __type: inputTypes[0].value });\r\n    setObjs(values);\r\n  };\r\n\r\n  const handleRemoveField = (index) => {\r\n    const values = [...objs];\r\n    values.splice(index, 1);\r\n    setObjs(values);\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        {props.errorMsg &&\r\n        <Grid item xs={12}>\r\n          <Error errorMsg={props.errorMsg}/>\r\n        </Grid>\r\n        }\r\n        {props.successMsg &&\r\n        <Grid item xs={12}>\r\n          <Success successMsg={props.successMsg}/>\r\n        </Grid>\r\n        }\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            placeholder={'Name'}\r\n            name={'Name'}\r\n            label={'Name'}\r\n            value={props.Name}\r\n            onChange={props.handleNameChange}/>\r\n          <IconButton color=\"primary\"\r\n                      className={classes.fieldIcons}\r\n                      onClick={handleAddField}\r\n          >\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        <div>\r\n          {objs.map((obj, index) => (\r\n            <Recursive inputTypes={inputTypes}\r\n                       obj={obj}\r\n                       handleChangeInput={(event) => handleChangeInput(event, index)}\r\n                       handleChangeType={(event) => handleChangeType(event, index)}\r\n                       index={index}\r\n                       addInner={() => handleAddInner(index)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <Grid item xs={12}>\r\n          {props.tagsArr.map((tag) =>\r\n            <>\r\n              {tag}\r\n              <IconButton onClick={() => props.handleDeleteTag(props.tagsArr.indexOf(tag))}\r\n                          color=\"primary\">\r\n                <HighlightOffIcon/>\r\n              </IconButton>\r\n              {', '}\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField variant=\"outlined\"\r\n                     size=\"small\"\r\n                     placeholder={'Tag'}\r\n                     name={'tag'}\r\n                     label={'Tag'}\r\n                     value={props.tag}\r\n                     onChange={props.handleTagChange}/>\r\n          <IconButton className={classes.fieldIcons} onClick={props.handleAddTag} color=\"primary\">\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        <Button type={'submit'} variant=\"contained\" color=\"primary\"\r\n                className={classes.button} onClick={props.handleSubmit}>Save</Button>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddNewObjForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Header\\Header.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\API\\api.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\EditObj\\EditObjForm.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\WithAuthRedirect.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ConfirmDialog.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Messages.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\AddNewObj\\Recursive.js",["201","202","203","204","205","206","207","208","209"],"import React, { useEffect, useState } from 'react';\r\nimport { IconButton, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Axios from 'axios';\r\nimport ConfirmDialog from '../../Common/ConfirmDialog';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  rtfEditor: {\r\n    margin: theme.spacing(1),\r\n    width: 400,\r\n    '& .ql-container': {\r\n      // minHeight: 100\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  innerObj: {\r\n    marginLeft: theme.spacing(10)\r\n  }\r\n}));\r\n\r\nconst Recursive = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(props.obj)) {\r\n      if (props.obj[0].__type === 'object') {\r\n        props.addInner(props.index);\r\n      }\r\n    } else {\r\n      if (props.obj.__type === 'object') {\r\n        props.addInner(props.index);\r\n      }\r\n    }\r\n  }, [props.obj]);\r\n\r\n  return (\r\n    <div>\r\n      {props.obj &&\r\n      <div className={classes.root}>\r\n        <TextField\r\n          placeholder={'Key'}\r\n          name={'__key'}\r\n          value={props.obj.__key}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label={'Key'}\r\n          onChange={(event) => props.handleChangeInput(event, props.index)}\r\n        />\r\n        {props.obj.__type === 'string' &&\r\n        <TextField\r\n          placeholder={'Value'}\r\n          name={'__value'}\r\n          value={props.obj.__value}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          label={'Value'}\r\n          onChange={(event) => props.handleChangeInput(event, props.index)}\r\n        />\r\n        }\r\n        <TextField\r\n          id=\"standard-select\"\r\n          select\r\n          name={'__type'}\r\n          value={props.obj.__type}\r\n          onChange={(event) => props.handleChangeType(event, props.index)}\r\n        >{props.inputTypes.map((option) => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n        </TextField>\r\n\r\n        <div className={classes.innerObj}>\r\n          {props.obj.__type === 'object' &&\r\n          <Recursive\r\n            inputTypes={props.inputTypes}\r\n            obj={Array.isArray(props.obj) ? props.obj.__value[0] : props.obj.__value}\r\n            handleChangeInput={(event) => props.handleChangeInput(event, props.index)}\r\n            handleChangeType={(event) => props.handleChangeType(event, props.index)}\r\n            index={props.index}\r\n            addInner={() => props.addInner(props.index)}\r\n          />\r\n          }\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recursive;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\RecursiveForm\\RecursiveForm.js",["210","211"],"import React, { useEffect, useState } from 'react';\r\nimport { IconButton, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Axios from 'axios';\r\nimport ConfirmDialog from '../../Common/ConfirmDialog';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  rtfEditor: {\r\n    margin: theme.spacing(1),\r\n    width: 400,\r\n    '& .ql-container': {\r\n      // minHeight: 100\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  innerObj: {\r\n    marginLeft: theme.spacing(10)\r\n  }\r\n}));\r\n\r\nconst\r\n  RecursiveForm = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [objs, setObjs] = useState([{ __key: '', __value: '', __type: inputTypes[0].value }]);\r\n  const [hasChanged, setHasChanged] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState([]);\r\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' });\r\n  const [addClicked, setAddClicked] = useState(false);\r\n\r\n  console.log(objs)\r\n\r\n  useEffect(() => {\r\n    if (props.addClicked) {\r\n      handleAddField();\r\n      props.setAddClicked(false);\r\n    }\r\n  }, [props.addClicked]);\r\n\r\n  useEffect(() => {\r\n    if (props.initialObjs) {\r\n      handleAddInitialFields(props.initialObjs);\r\n    }\r\n  }, [props.initialObjs]);\r\n\r\n  useEffect(() => {\r\n    if (hasChanged) {\r\n      props.handleChangeParent(objs, props.parentIndex);\r\n      setHasChanged(false);\r\n    }\r\n  }, [hasChanged]);\r\n\r\n  const handleGetChildObj = (childObjs, index) => {\r\n    const values = [...objs];\r\n    values[index].__key = objs[index].__key;\r\n    values[index].__value = { ...childObjs };\r\n    values[index].__type = objs[index].__type;\r\n    setObjs(values);\r\n    setHasChanged(true);\r\n  };\r\n  const handleGetChildArr = (childObjs, index) => {\r\n    const values = [...objs];\r\n    values[index].__key = objs[index].__key;\r\n    values[index].__value = [...Object.values(childObjs)];\r\n    values[index].__type = objs[index].__type;\r\n    setObjs(values);\r\n    setHasChanged(true);\r\n  };\r\n\r\n  const handleAddInitialFields = (initialObjs) => {\r\n    setObjs(Object.values(initialObjs));\r\n  };\r\n\r\n  const handleChangeInput = (event, index) => {\r\n    const values = [...objs];\r\n    values[index][event.target.name] = event.target.value;\r\n    setObjs(values);\r\n    setHasChanged(true);\r\n  };\r\n\r\n  const handleChangeType = (event, index) => {\r\n    const values = [...objs];\r\n    values[index].__type = event.target.value;\r\n    values[index].__value = '';\r\n    setObjs(values);\r\n    setHasChanged(true);\r\n  };\r\n\r\n  const handleUpload = async (event, index) => {\r\n    const formData = new FormData();\r\n    formData.append('uploadedFile', event.target.files[0]);\r\n    const uploadedFileName = await Axios.post('/api/backoffice/uploadFile', formData, {\r\n      onUploadProgress: progressEvent => {\r\n        const { loaded, total } = progressEvent;\r\n        const uploads = [...uploadProgress];\r\n        uploads[index] = (Math.floor((loaded * 100) / total));\r\n        setUploadProgress(uploads);\r\n      }\r\n    });\r\n    const values = [...objs];\r\n    values[index][event.target.name] = event.target.value;\r\n    values[index].__value = uploadedFileName.data;\r\n    setObjs(values);\r\n  };\r\n\r\n  const handleAddField = () => {\r\n    setObjs([...objs, { __key: '', __value: '', __type: inputTypes[0].value }]);\r\n  };\r\n\r\n  const handleRemoveField = (index) => {\r\n    const values = [...objs];\r\n    values.splice(index, 1);\r\n    setObjs(values);\r\n    setConfirmDialog({ ...confirmDialog, isOpen: false });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {objs.map((fieldKey, index) =>\r\n        <div>\r\n          {!props.isArray &&\r\n          <TextField\r\n            placeholder={'Key'}\r\n            name={'__key'}\r\n            value={objs[index].__key}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Key'}\r\n            onChange={(event) => handleChangeInput(event, index)}\r\n          />\r\n          }\r\n          {objs[index].__type === 'string' &&\r\n          <TextField\r\n            placeholder={'Value'}\r\n            name={'__value'}\r\n            value={objs[index].__value}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Value'}\r\n            onChange={(event) => handleChangeInput(event, index)}\r\n          />\r\n          }\r\n          {objs[index].__type === 'file' &&\r\n          <>\r\n            <input type={'file'} name={'upload'} onChange={(event) => handleUpload(event, index)}/>\r\n            {(uploadProgress[index] > 0)\r\n            && <ProgressWithPercentage value={uploadProgress[index]} index={index} file={objs[index].__value}/>\r\n            }\r\n          </>\r\n          }\r\n          <TextField\r\n            id=\"standard-select\"\r\n            select\r\n            name={'__type'}\r\n            value={objs[index].__type}\r\n            onChange={(event) => handleChangeType(event, index)}\r\n          >{inputTypes.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n          </TextField>\r\n          {(objs[index].__type === 'object' || objs[index].__type === 'array') &&\r\n          <IconButton color=\"primary\" className={classes.fieldIcons} onClick={() => setAddClicked(true)}>\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n          }\r\n          {objs.length > 1 &&\r\n          <IconButton color=\"secondary\"\r\n                      className={classes.fieldIcons}\r\n                      onClick={() => {\r\n                        objs[index].__key || objs[index].__value ?\r\n                          setConfirmDialog({\r\n                            isOpen: true,\r\n                            title: `Deleting filled field`,\r\n                            subTitle: `Are you sure you want to delete this field?`,\r\n                            onConfirm: () => handleRemoveField(index)\r\n                          })\r\n                          : handleRemoveField(index);\r\n                      }}>\r\n            <RemoveCircleIcon/>\r\n          </IconButton>\r\n          }\r\n          <div className={classes.innerObj}>\r\n            {objs[index].__type === 'object' &&\r\n            <RecursiveForm initialObjs={objs[index].__value} handleChangeParent={handleGetChildObj}\r\n                           parentIndex={index} addClicked={addClicked} setAddClicked={setAddClicked}/>}\r\n            {objs[index].__type === 'array' &&\r\n            <RecursiveForm initialObjs={objs[index].__value} handleChangeParent={handleGetChildArr} isArray={true}\r\n                           parentIndex={index} addClicked={addClicked} setAddClicked={setAddClicked}/>}\r\n            {objs[index].__type === 'rich-text' &&\r\n            <ReactQuill className={classes.rtfEditor} value={objs[index].__value}\r\n                        onChange={html => handleChangeInput({ target: { value: html, name: '__value' } }, index)}/>}\r\n          </div>\r\n          <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog}/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecursiveForm;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\Validators.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\RenderTextFields.js",[],"C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Common\\ProgressWithPercentage.js",["212"],"import CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n}));\r\n\r\nconst ProgressWithPercentage = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {props.value < 100 ?\r\n          <Typography variant=\"caption\" component=\"div\">{props.value}</Typography>\r\n          : <IconButton\r\n            component={Link}\r\n            to={{ pathname: process.env.REACT_APP_SERVER_BASE_URL + props.file.fileName }}\r\n            target={'_blank'}\r\n            color=\"primary\">\r\n            <ExitToAppIcon/>\r\n          </IconButton>}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProgressWithPercentage;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\Main\\RecursiveMain.js",["213","214","215","216"],"import {\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport Axios from 'axios';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\nimport { Link } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  rtfEditor: {\r\n    margin: theme.spacing(1),\r\n    width: 400,\r\n    '& .ql-container': {\r\n      // minHeight: 100\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  innerObj: {\r\n    marginLeft: theme.spacing(10)\r\n  }\r\n}));\r\n\r\nconst RecursiveMain = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n\r\n  const [objs, setObjs] = useState([{ __key: '', __value: '', __type: inputTypes[0].value }]);\r\n\r\n  useEffect(() => {\r\n    if (props.initialObjs) {\r\n      handleAddInitialFields(props.initialObjs);\r\n    }\r\n  }, [props.initialObjs]);\r\n\r\n  const handleAddInitialFields = (initialObjs) => {\r\n    setObjs(Object.values(initialObjs));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {objs.map((fieldKey, index) =>\r\n        <div>\r\n          {!props.isArray &&\r\n          <TextField\r\n            placeholder={'Key'}\r\n            name={'__key'}\r\n            value={objs[index].__key}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Key'}\r\n          />\r\n          }\r\n          {objs[index].__type === 'string' &&\r\n          <TextField\r\n            placeholder={'Value'}\r\n            name={'__value'}\r\n            value={objs[index].__value}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Value'}\r\n          />\r\n          }\r\n          {objs[index].__type === 'file' &&\r\n          <>\r\n            <IconButton\r\n              component={Link}\r\n              to={{ pathname: process.env.REACT_APP_SERVER_BASE_URL + objs[index].__value.fileName }}\r\n              target={'_blank'}\r\n              color=\"primary\">\r\n              <ExitToAppIcon/>\r\n            </IconButton>\r\n          </>\r\n          }\r\n          <TextField\r\n            id=\"standard-select\"\r\n            select\r\n            name={'__type'}\r\n            value={objs[index].__type}\r\n          >\r\n            <MenuItem value={objs[index].__type}>\r\n              {objs[index].__type}\r\n            </MenuItem>\r\n          </TextField>\r\n          <div className={classes.innerObj}>\r\n            {objs[index].__type === 'object' &&\r\n            <RecursiveMain initialObjs={objs[index].__value}/>}\r\n            {objs[index].__type === 'array' &&\r\n            <RecursiveMain initialObjs={objs[index].__value} isArray={true}/>}\r\n            {objs[index].__type === 'rich-text' &&\r\n            <ReactQuill className={classes.rtfEditor} value={objs[index].__value}/>}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecursiveMain;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\CreateObj\\CreateObjContainer.js",["217","218","219","220","221","222","223"],"import { connect } from 'react-redux';\r\nimport { addNewObj } from '../../Redux/Reducers/ObjReducer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../Common/WithAuthRedirect';\r\nimport { getErrorMsg, getSuccessMsg } from '../../Redux/Selectors/AppSelectors';\r\nimport { clearMessages, setErrorMsg } from '../../Redux/Reducers/AppReducer';\r\nimport CreateObjForm from './CreateObjForm';\r\n\r\nconst CreateObjContainer = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [tag, setTag] = useState('');\r\n  const [tagsArr, setTagsArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearMessages();\r\n    };\r\n  }, []);\r\n\r\n  const handleTagChange = (e) => {\r\n    props.clearMessages();\r\n    setTag(e.target.value);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    props.clearMessages();\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    if (tag) {\r\n      if (!tagsArr.includes(tag)) {\r\n        setTagsArr([...tagsArr, tag]);\r\n      } else {\r\n        props.setErrorMsg('Tags must be unique');\r\n      }\r\n    } else {\r\n      props.setErrorMsg('Tag can\\'t be empty');\r\n    }\r\n  };\r\n  const handleDeleteTag = (index) => {\r\n    setTagsArr(tagsArr.filter((tag) => tagsArr.indexOf(tag) !== index));\r\n  };\r\n\r\n  const [objs, setObjs] = useState({});\r\n\r\n  const handleSubmit = () => {\r\n    props.clearMessages();\r\n    const newObj = {\r\n      objs,\r\n      name: name,\r\n      tags: tagsArr\r\n    };\r\n    props.addNewObj(newObj);\r\n  };\r\n\r\n  const setBaseObj = (subObjs) => {\r\n    setObjs({ ...subObjs });\r\n  };\r\n\r\n  return (\r\n    <CreateObjForm/>\r\n    // <CreateObjForm\r\n    //   errorMsg={props.errorMsg}\r\n    //   successMsg={props.successMsg}\r\n    //   setErrorMsg={props.setErrorMsg}\r\n    //   clearMessages={props.clearMessages}\r\n    //   tagsArr={tagsArr}\r\n    //   handleTagChange={handleTagChange}\r\n    //   handleAddTag={handleAddTag}\r\n    //   handleDeleteTag={handleDeleteTag}\r\n    //   name={name}\r\n    //   handleNameChange={handleNameChange}\r\n    //   handleChangeParent={setBaseObj}\r\n    //   handleSubmit={handleSubmit}\r\n    // />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMsg: getErrorMsg(state),\r\n  successMsg: getSuccessMsg(state)\r\n});\r\nconst actionCreators = {\r\n  addNewObj,\r\n  clearMessages,\r\n  setErrorMsg\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actionCreators),\r\n  WithAuthRedirect\r\n)(CreateObjContainer);\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\CreateObj\\CreateObjForm.js",["224"],"import React, { useState } from 'react';\r\nimport CreateObjRecursiveForm from './CreateObjRecursiveForm';\r\n\r\nconst CreateObjForm = (props) => {\r\n\r\n  const [objs, setObjs] = useState([{}]);\r\n\r\n  const handleChildInput = (childInput) => {\r\n    console.log(childInput);\r\n  };\r\n  const handleAdd = () => {\r\n    setObjs([...objs, {}]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CreateObjRecursiveForm obj={objs} handleChildInput={handleChildInput}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateObjForm;","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\CreateObj\\CreateObjRecursiveForm.js",["225"],"import React, { useState } from 'react';\r\n\r\nconst CreateObjRecursiveForm = (props) => {\r\n\r\n  const [Checkbox, SetCheckbox] = useState(false);\r\n\r\n  const handleChangeInput = (e) => {\r\n    props.handleChildInput(e.target.value);\r\n  };\r\n\r\n  const handleCheckbox = () => {\r\n    SetCheckbox(!Checkbox);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        props.obj.map((obj, index) => (\r\n          <div style={{ marginLeft: '30px' }}>\r\n            <input key={'Key'} placeholder={'Key'} name={'Key'} type=\"text\"\r\n                   onChange={props.handleChangeInput}/>\r\n            <input key={'Value'} placeholder={'Value'} name={'Value'} type=\"text\"\r\n                   onChange={props.handleChangeInput}/>\r\n            <input type={'checkbox'} name={'Checkbox'} key={'Checkbox'} value={Checkbox} onChange={handleCheckbox}/>\r\n            {Checkbox && <CreateObjRecursiveForm handleChildInput={props.handleChildInput}/>}\r\n          </div>)\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateObjRecursiveForm;","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\simpleRecursiveForm\\FormContainer.js",["226"],"import React, { useEffect, useState } from 'react';\r\nimport RecursiveForm from './RecursiveForm';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Button, Grid, IconButton, TextField } from '@material-ui/core';\r\nimport { Error, Success } from '../../Common/Messages';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport ConfirmDialog from '../../Common/ConfirmDialog';\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nconst FormContainer = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const inputTypes = [\r\n    { value: 'string', label: 'string' },\r\n    { value: 'array', label: 'array' },\r\n    { value: 'object', label: 'object' },\r\n    { value: 'file', label: 'file' },\r\n    { value: 'rich-text', label: 'rich-text' }\r\n  ];\r\n  const [objs, setObjs] = useState([{ __key: '', __value: '', __type: inputTypes[0].value }]);\r\n  const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' });\r\n\r\n  useEffect(() => {\r\n    if (props.initialObjs) {\r\n      setObjs(props.initialObjs);\r\n    }\r\n  }, [props.initialObjs]);\r\n\r\n  console.log('RENDER');\r\n\r\n  const [uploadProgress, setUploadProgress] = useState([]);\r\n\r\n  const changeItemByIndex = (strIndex, cb) => {\r\n    if (!strIndex) {\r\n      setObjs(cb(objs));\r\n    } else {\r\n      const updatedObjs = JSON.parse(JSON.stringify(objs));\r\n      const str = strIndex.split('.');\r\n      let objAtIndex = updatedObjs;\r\n      for (let i = 0; i < str.length; i++) {\r\n        if (i === str.length - 1) {\r\n          objAtIndex[str[i]] = cb(objAtIndex[str[i]]);\r\n        }\r\n        objAtIndex = objAtIndex[str[i]].__value;\r\n      }\r\n      setObjs(updatedObjs);\r\n    }\r\n  };\r\n\r\n  const handleChildInput = (event, strIndex) => {\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      obj[event.target.name] = event.target.value;\r\n      return obj;\r\n    });\r\n  };\r\n\r\n  const handleChangeChildType = (event, strIndex) => {\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      obj.__type = event.target.value;\r\n      if (event.target.value === 'object' || event.target.value === 'array') {\r\n        obj.__value = [{ __key: '', __value: '', __type: inputTypes[0].value }];\r\n      }\r\n      return obj;\r\n    });\r\n  };\r\n\r\n  const handleAdd = (strIndex) => {\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      if (!strIndex) {\r\n        return [...obj, { __key: '', __value: '', __type: inputTypes[0].value }];\r\n      } else {\r\n        console.log(obj.__value);\r\n        obj.__value.push({ __key: '', __value: '', __type: inputTypes[0].value });\r\n        return obj;\r\n      }\r\n    });\r\n  };\r\n  const handleRemove = (strIndex, index) => {\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      if (!strIndex) {\r\n        const temp = [...obj];\r\n        temp.splice(index, 1);\r\n        return temp;\r\n      } else {\r\n        obj.__value.splice(index, 1);\r\n        console.log(obj);\r\n        return obj;\r\n      }\r\n    });\r\n    setConfirmDialog({ ...confirmDialog, isOpen: false });\r\n  };\r\n\r\n  const handleUpload = async (event, strIndex) => {\r\n    const formData = new FormData();\r\n    formData.append('uploadedFile', event.target.files[0]);\r\n    const uploadedFileName = await Axios.post('/api/backoffice/uploadFile', formData, {\r\n      onUploadProgress: progressEvent => {\r\n        const { loaded, total } = progressEvent;\r\n        changeItemByIndex(strIndex, (obj) => {\r\n          obj.uploadProgress = (Math.floor((loaded * 100) / total));\r\n          return obj;\r\n        });\r\n      }\r\n    });\r\n    changeItemByIndex(strIndex, (obj) => {\r\n      obj[event.target.name] = event.target.value;\r\n      obj.__value = uploadedFileName.data;\r\n      return obj;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        {props.errorMsg &&\r\n        <Grid item xs={12}>\r\n          <Error errorMsg={props.errorMsg}/>\r\n        </Grid>\r\n        }\r\n        {props.successMsg &&\r\n        <Grid item xs={12}>\r\n          <Success successMsg={props.successMsg}/>\r\n        </Grid>\r\n        }\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            placeholder={'Name'}\r\n            name={'Name'}\r\n            label={'Name'}\r\n            value={props.Name}\r\n            onChange={props.handleNameChange}/>\r\n          <IconButton color=\"primary\"\r\n                      className={classes.fieldIcons}\r\n                      onClick={() => handleAdd(null)}>\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        <RecursiveForm objs={objs}\r\n                       handleChildInput={handleChildInput}\r\n                       handleChangeChildType={handleChangeChildType}\r\n                       handleAdd={handleAdd}\r\n                       handleRemove={handleRemove}\r\n                       inputTypes={inputTypes}\r\n                       setConfirmDialog={setConfirmDialog}\r\n                       handleUpload={handleUpload}\r\n                       uploadProgress={uploadProgress}\r\n        />\r\n        <Grid item xs={12}>\r\n          {props.tagsArr.map((tag) =>\r\n            <>\r\n              {tag}\r\n              <IconButton onClick={() => props.handleDeleteTag(props.tagsArr.indexOf(tag))}\r\n                          color=\"primary\">\r\n                <HighlightOffIcon/>\r\n              </IconButton>\r\n              {', '}\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField variant=\"outlined\"\r\n                     size=\"small\"\r\n                     placeholder={'Tag'}\r\n                     name={'tag'}\r\n                     label={'Tag'}\r\n                     value={props.tag}\r\n                     onChange={props.handleTagChange}/>\r\n          <IconButton className={classes.fieldIcons} onClick={props.handleAddTag} color=\"primary\">\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n        <Button type={'submit'} variant=\"contained\" color=\"primary\"\r\n                className={classes.button} onClick={() => props.handleSubmit(objs)}>Save</Button>\r\n      </Grid>\r\n      <ConfirmDialog confirmDialog={confirmDialog} setConfirmDialog={setConfirmDialog}/>\r\n    </Container>\r\n  );\r\n};\r\nexport default FormContainer;\r\n","C:\\Users\\CST\\WebstormProjects\\jsoncms\\client\\src\\Components\\simpleRecursiveForm\\RecursiveForm.js",["227"],"import React from 'react';\r\nimport { IconButton, makeStyles, MenuItem, TextField } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport ProgressWithPercentage from '../../Common/ProgressWithPercentage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  rtfEditor: {\r\n    margin: theme.spacing(1),\r\n    width: 400,\r\n    '& .ql-container': {\r\n      // minHeight: 100\r\n    }\r\n  },\r\n  fieldIcons: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  innerObj: {\r\n    marginLeft: theme.spacing(10)\r\n  },\r\n  uploadButton: {\r\n    margin: theme.spacing(1),\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RecursiveForm = (props) => {\r\n\r\n  console.log('INNER RENDER')\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {props.objs.map((obj, index) => (\r\n        <div>\r\n          {!props.isArray &&\r\n          <TextField\r\n            key={'Key'}\r\n            placeholder={'Key'}\r\n            name={'__key'}\r\n            value={obj.__key}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Key'}\r\n            onChange={(event) => props.handleChildInput(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n          />\r\n          }\r\n          {obj.__type === 'string' &&\r\n          <TextField\r\n            key={'Value'}\r\n            placeholder={'Value'}\r\n            name={'__value'}\r\n            value={obj.__value}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label={'Value'}\r\n            onChange={(event) => props.handleChildInput(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n          />\r\n          }\r\n          {obj.__type === 'file' &&\r\n          <>\r\n            <input className={classes.uploadButton} type={'file'} name={'upload'}\r\n                   onChange={(event) => props.handleUpload(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n            />\r\n            {/*{(obj.uploadProgress && obj.uploadProgress > 0)*/}\r\n            {/*&& <ProgressWithPercentage value={obj.uploadProgress} index={index} file={obj.__value}/>*/}\r\n            {/*}*/}\r\n          </>\r\n          }\r\n          <TextField\r\n            id=\"standard-select\"\r\n            select\r\n            name={'__type'}\r\n            value={obj.__type}\r\n            onChange={(event) => props.handleChangeChildType(event, props.index ? `${props.index}.${index}` : `${index}`)}\r\n          >{props.inputTypes.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n          </TextField>\r\n          {(obj.__type === 'object' || obj.__type === 'array') &&\r\n          <IconButton color=\"primary\"\r\n                      className={classes.fieldIcons}\r\n                      onClick={() => props.handleAdd(props.index ? `${props.index}.${index}` : `${index}`)}>\r\n            <AddCircleIcon/>\r\n          </IconButton>\r\n          }\r\n          {props.objs.length > 1 &&\r\n          <IconButton color=\"secondary\"\r\n                      className={classes.fieldIcons}\r\n                      onClick={() => {\r\n                        obj.__key || obj.__value ?\r\n                          props.setConfirmDialog({\r\n                            isOpen: true,\r\n                            title: `Deleting filled field`,\r\n                            subTitle: `Are you sure you want to delete this field?`,\r\n                            onConfirm: () => props.handleRemove(props.index ? `${props.index}` : null, index)\r\n                          })\r\n                          : props.handleRemove(props.index ? `${props.index}` : null, index);\r\n                      }}>\r\n            <RemoveCircleIcon/>\r\n          </IconButton>\r\n          }\r\n          {obj.__type === 'object' &&\r\n          <div className={classes.innerObj}>\r\n            <RecursiveForm objs={obj.__value}\r\n                           handleChildInput={props.handleChildInput}\r\n                           handleChangeChildType={props.handleChangeChildType}\r\n                           handleAdd={props.handleAdd}\r\n                           handleRemove={props.handleRemove}\r\n                           index={props.index ? `${props.index}.${index}` : `${index}`}\r\n                           inputTypes={props.inputTypes}\r\n                           setConfirmDialog={props.setConfirmDialog}\r\n                           handleUpload={props.handleUpload}\r\n                           uploadProgress={props.uploadProgress}\r\n            />\r\n          </div>}\r\n          {obj.__type === 'array' &&\r\n          <div className={classes.innerObj}>\r\n            <RecursiveForm isArray={true}\r\n                           objs={obj.__value}\r\n                           handleChildInput={props.handleChildInput}\r\n                           handleChangeChildType={props.handleChangeChildType}\r\n                           handleAdd={props.handleAdd}\r\n                           handleRemove={props.handleRemove}\r\n                           index={props.index ? `${props.index}.${index}` : `${index}`}\r\n                           inputTypes={props.inputTypes}\r\n                           setConfirmDialog={props.setConfirmDialog}\r\n                           handleUpload={props.handleUpload}\r\n                           uploadProgress={props.uploadProgress}\r\n            />\r\n          </div>}\r\n          {obj.__type === 'rich-text' &&\r\n          <div className={classes.innerObj}>\r\n            <ReactQuill className={classes.rtfEditor}\r\n                        value={obj.__value}\r\n                        onChange={(html) => props.handleChildInput({\r\n                          target: {\r\n                            value: html,\r\n                            name: '__value'\r\n                          }\r\n                        }, props.index ? `${props.index}.${index}` : `${index}`)}\r\n            />\r\n          </div>}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecursiveForm;\r\n",{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":17,"column":8,"nodeType":"234","messageId":"235","endLine":17,"endColumn":26},{"ruleId":"236","severity":1,"message":"237","line":30,"column":6,"nodeType":"238","endLine":30,"endColumn":8,"suggestions":"239"},{"ruleId":"236","severity":1,"message":"237","line":33,"column":6,"nodeType":"238","endLine":33,"endColumn":22,"suggestions":"240"},{"ruleId":"232","severity":1,"message":"241","line":2,"column":23,"nodeType":"234","messageId":"235","endLine":2,"endColumn":36},{"ruleId":"232","severity":1,"message":"242","line":6,"column":21,"nodeType":"234","messageId":"235","endLine":6,"endColumn":30},{"ruleId":"236","severity":1,"message":"237","line":23,"column":6,"nodeType":"238","endLine":23,"endColumn":17,"suggestions":"243"},{"ruleId":"236","severity":1,"message":"237","line":16,"column":6,"nodeType":"238","endLine":16,"endColumn":8,"suggestions":"244"},{"ruleId":"236","severity":1,"message":"237","line":16,"column":6,"nodeType":"238","endLine":16,"endColumn":8,"suggestions":"245"},{"ruleId":"236","severity":1,"message":"237","line":19,"column":6,"nodeType":"238","endLine":19,"endColumn":8,"suggestions":"246"},{"ruleId":"232","severity":1,"message":"247","line":11,"column":8,"nodeType":"234","messageId":"235","endLine":11,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":24,"column":6,"nodeType":"238","endLine":24,"endColumn":17,"suggestions":"248"},{"ruleId":"232","severity":1,"message":"249","line":58,"column":9,"nodeType":"234","messageId":"235","endLine":58,"endColumn":24},{"ruleId":"232","severity":1,"message":"250","line":63,"column":9,"nodeType":"234","messageId":"235","endLine":63,"endColumn":19},{"ruleId":"232","severity":1,"message":"251","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"228","replacedBy":"252"},{"ruleId":"230","replacedBy":"253"},{"ruleId":"232","severity":1,"message":"254","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":21},{"ruleId":"232","severity":1,"message":"255","line":61,"column":9,"nodeType":"234","messageId":"235","endLine":61,"endColumn":26},{"ruleId":"232","severity":1,"message":"251","line":1,"column":28,"nodeType":"234","messageId":"235","endLine":1,"endColumn":36},{"ruleId":"232","severity":1,"message":"256","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":20},{"ruleId":"232","severity":1,"message":"257","line":3,"column":8,"nodeType":"234","messageId":"235","endLine":3,"endColumn":21},{"ruleId":"232","severity":1,"message":"258","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":24},{"ruleId":"232","severity":1,"message":"259","line":5,"column":8,"nodeType":"234","messageId":"235","endLine":5,"endColumn":18},{"ruleId":"232","severity":1,"message":"260","line":6,"column":8,"nodeType":"234","messageId":"235","endLine":6,"endColumn":30},{"ruleId":"232","severity":1,"message":"261","line":8,"column":8,"nodeType":"234","messageId":"235","endLine":8,"endColumn":13},{"ruleId":"232","severity":1,"message":"262","line":9,"column":8,"nodeType":"234","messageId":"235","endLine":9,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":47,"column":6,"nodeType":"238","endLine":47,"endColumn":17,"suggestions":"263"},{"ruleId":"236","severity":1,"message":"264","line":59,"column":6,"nodeType":"238","endLine":59,"endColumn":24,"suggestions":"265"},{"ruleId":"236","severity":1,"message":"266","line":72,"column":6,"nodeType":"238","endLine":72,"endColumn":18,"suggestions":"267"},{"ruleId":"232","severity":1,"message":"268","line":15,"column":9,"nodeType":"234","messageId":"235","endLine":15,"endColumn":16},{"ruleId":"232","severity":1,"message":"257","line":8,"column":8,"nodeType":"234","messageId":"235","endLine":8,"endColumn":21},{"ruleId":"232","severity":1,"message":"258","line":9,"column":8,"nodeType":"234","messageId":"235","endLine":9,"endColumn":24},{"ruleId":"232","severity":1,"message":"261","line":11,"column":8,"nodeType":"234","messageId":"235","endLine":11,"endColumn":13},{"ruleId":"232","severity":1,"message":"260","line":12,"column":8,"nodeType":"234","messageId":"235","endLine":12,"endColumn":30},{"ruleId":"236","severity":1,"message":"237","line":19,"column":6,"nodeType":"238","endLine":19,"endColumn":8,"suggestions":"269"},{"ruleId":"232","severity":1,"message":"270","line":21,"column":9,"nodeType":"234","messageId":"235","endLine":21,"endColumn":24},{"ruleId":"232","severity":1,"message":"271","line":25,"column":9,"nodeType":"234","messageId":"235","endLine":25,"endColumn":25},{"ruleId":"232","severity":1,"message":"272","line":30,"column":9,"nodeType":"234","messageId":"235","endLine":30,"endColumn":21},{"ruleId":"232","severity":1,"message":"273","line":41,"column":9,"nodeType":"234","messageId":"235","endLine":41,"endColumn":24},{"ruleId":"232","severity":1,"message":"274","line":47,"column":9,"nodeType":"234","messageId":"235","endLine":47,"endColumn":21},{"ruleId":"232","severity":1,"message":"250","line":57,"column":9,"nodeType":"234","messageId":"235","endLine":57,"endColumn":19},{"ruleId":"232","severity":1,"message":"275","line":11,"column":9,"nodeType":"234","messageId":"235","endLine":11,"endColumn":18},{"ruleId":"232","severity":1,"message":"276","line":7,"column":9,"nodeType":"234","messageId":"235","endLine":7,"endColumn":26},{"ruleId":"232","severity":1,"message":"277","line":42,"column":26,"nodeType":"234","messageId":"235","endLine":42,"endColumn":43},{"ruleId":"232","severity":1,"message":"260","line":7,"column":8,"nodeType":"234","messageId":"235","endLine":7,"endColumn":30},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"no-unused-vars","'CreateObjContainer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["280"],["281"],"'setSuccessMsg' is defined but never used.","'updateObj' is defined but never used.",["282"],["283"],["284"],["285"],"'EditObjForm' is defined but never used.",["286"],"'handleDeleteObj' is assigned a value but never used.","'setBaseObj' is assigned a value but never used.","'useState' is defined but never used.",["278"],["279"],"'RecursiveForm' is defined but never used.","'handleRemoveField' is assigned a value but never used.","'IconButton' is defined but never used.","'AddCircleIcon' is defined but never used.","'RemoveCircleIcon' is defined but never used.","'ReactQuill' is defined but never used.","'ProgressWithPercentage' is defined but never used.","'Axios' is defined but never used.","'ConfirmDialog' is defined but never used.",["287"],"React Hook useEffect has missing dependencies: 'handleAddField' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["288"],"React Hook useEffect has missing dependencies: 'objs' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["289"],"'classes' is assigned a value but never used.",["290"],"'handleTagChange' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","'handleAddTag' is assigned a value but never used.","'handleDeleteTag' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'handleAdd' is assigned a value but never used.","'handleChangeInput' is assigned a value but never used.","'setUploadProgress' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"291","fix":"297"},{"desc":"291","fix":"298"},{"desc":"291","fix":"299"},{"desc":"295","fix":"300"},{"desc":"295","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"291","fix":"306"},"Update the dependencies array to be: [props]",{"range":"307","text":"308"},"Update the dependencies array to be: [props, props.isAuthed]",{"range":"309","text":"310"},"Update the dependencies array to be: [props, props.obj]",{"range":"311","text":"312"},{"range":"313","text":"308"},{"range":"314","text":"308"},{"range":"315","text":"308"},{"range":"316","text":"312"},{"range":"317","text":"312"},"Update the dependencies array to be: [handleAddField, props, props.addClicked]",{"range":"318","text":"319"},"Update the dependencies array to be: [hasChanged, objs, props]",{"range":"320","text":"321"},{"range":"322","text":"308"},[1249,1251],"[props]",[1319,1335],"[props, props.isAuthed]",[826,837],"[props, props.obj]",[570,572],[579,581],[740,742],[926,937],[1252,1263],[1751,1769],"[handleAddField, props, props.addClicked]",[2056,2068],"[hasChanged, objs, props]",[719,721]]